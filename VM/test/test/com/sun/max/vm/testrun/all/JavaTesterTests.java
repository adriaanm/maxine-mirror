/*
 * Copyright (c) 2007 Sun Microsystems, Inc.  All rights reserved.
 *
 * Sun Microsystems, Inc. has intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation, these intellectual property
 * rights may include one or more of the U.S. patents listed at http://www.sun.com/patents and one or
 * more additional patents or pending patent applications in the U.S. and in other countries.
 *
 * U.S. Government Rights - Commercial software. Government users are subject to the Sun
 * Microsystems, Inc. standard license agreement and applicable provisions of the FAR and its
 * supplements.
 *
 * Use is subject to license terms. Sun, Sun Microsystems, the Sun logo, Java and Solaris are trademarks or
 * registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries. All SPARC trademarks
 * are used under license and are trademarks or registered trademarks of SPARC International, Inc. in the
 * U.S. and other countries.
 *
 * UNIX is a registered trademark in the U.S. and other countries, exclusively licensed through X/Open
 * Company, Ltd.
 */
package test.com.sun.max.vm.testrun.all;


/**
 * This class contains a collection of test methods that are generated by
 * the Java Tester. These test methods invoke the test classes' test methods
 * with the inputs specified in each test class's comment. These test methods
 * check for the correct output (or exception) for a given input.
 *
 * This class is separated from the JavaTesterRunScheme so that it can be compiled
 * with a different compiler than the JavaTesterRunScheme--typically, the JIT. Additionally,
 * the test classes themselves can be compiled with a different compiler, which allows
 * testing calls between code compiled by two different compilers.
 *
 * The code of each of these methods is generated by
 * {@link test.com.sun.max.vm.testrun.JavaTesterGenerator}.
 *
 * @author Ben L. Titzer
 */
public class JavaTesterTests {
// GENERATED TEST RUNS
    static void test_bytecode_BC_aaload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aaload");
        String runString = null;
        try {
        // test(0) == null
            runString = "test(0)";
            if (null != test.bytecode.BC_aaload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == null
            runString = "test(1)";
            if (null != test.bytecode.BC_aaload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 
            runString = "test(2)";
            if (!"".equals(test.bytecode.BC_aaload.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_aastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aastore");
        String runString = null;
        try {
        // test(true,0) == 0
            runString = "test(true,0)";
            if (0 != test.bytecode.BC_aastore.test(true, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(true,1) == 1
            runString = "test(true,1)";
            if (1 != test.bytecode.BC_aastore.test(true, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(true,2) == 2
            runString = "test(true,2)";
            if (2 != test.bytecode.BC_aastore.test(true, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(false,1) == 1
            runString = "test(false,1)";
            if (1 != test.bytecode.BC_aastore.test(false, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(false,2) == 2
            runString = "test(false,2)";
            if (2 != test.bytecode.BC_aastore.test(false, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_aload_0() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aload_0");
        String runString = null;
        try {
        // test(null) == null
            runString = "test(null)";
            if (null != test.bytecode.BC_aload_0.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("x") == x
            runString = "test(\"x\")";
            if (!"x".equals(test.bytecode.BC_aload_0.test("x"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_aload_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aload_1");
        String runString = null;
        try {
        // test(1,null) == null
            runString = "test(1,null)";
            if (null != test.bytecode.BC_aload_1.test(1, null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,"x") == x
            runString = "test(1,\"x\")";
            if (!"x".equals(test.bytecode.BC_aload_1.test(1, "x"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_aload_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aload_2");
        String runString = null;
        try {
        // test(1,1,null) == null
            runString = "test(1,1,null)";
            if (null != test.bytecode.BC_aload_2.test(1, 1, null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,"x") == x
            runString = "test(1,1,\"x\")";
            if (!"x".equals(test.bytecode.BC_aload_2.test(1, 1, "x"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_aload_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_aload_3");
        String runString = null;
        try {
        // test(1,1,1,"x") == x
            runString = "test(1,1,1,\"x\")";
            if (!"x".equals(test.bytecode.BC_aload_3.test(1, 1, 1, "x"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,null) == null
            runString = "test(1,1,1,null)";
            if (null != test.bytecode.BC_aload_3.test(1, 1, 1, null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_anewarray() {
        JavaTesterRunScheme.begin("test.bytecode.BC_anewarray");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_anewarray.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_anewarray.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_areturn() {
        JavaTesterRunScheme.begin("test.bytecode.BC_areturn");
        String runString = null;
        try {
        // test(null) == null
            runString = "test(null)";
            if (null != test.bytecode.BC_areturn.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == 
            runString = "test(\"\")";
            if (!"".equals(test.bytecode.BC_areturn.test(""))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("this") == this
            runString = "test(\"this\")";
            if (!"this".equals(test.bytecode.BC_areturn.test("this"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_arraylength() {
        JavaTesterRunScheme.begin("test.bytecode.BC_arraylength");
        String runString = null;
        try {
        // test(1) == 3
            runString = "test(1)";
            if (3 != test.bytecode.BC_arraylength.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if (4 != test.bytecode.BC_arraylength.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 5
            runString = "test(3)";
            if (5 != test.bytecode.BC_arraylength.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 42
            runString = "test(4)";
            if (42 != test.bytecode.BC_arraylength.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_athrow() {
        JavaTesterRunScheme.begin("test.bytecode.BC_athrow");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_athrow.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_athrow.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.Throwable
            try {
                runString = "test(2)";
                test.bytecode.BC_athrow.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Throwable.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_athrow.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_baload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_baload");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.bytecode.BC_baload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.bytecode.BC_baload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.bytecode.BC_baload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.bytecode.BC_baload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_bastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_bastore");
        String runString = null;
        try {
        // test(0,true) == true
            runString = "test(0,true)";
            if (true != test.bytecode.BC_bastore.test(0, true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,false) == false
            runString = "test(1,false)";
            if (false != test.bytecode.BC_bastore.test(1, false)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,true) == true
            runString = "test(2,true)";
            if (true != test.bytecode.BC_bastore.test(2, true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,false) == false
            runString = "test(3,false)";
            if (false != test.bytecode.BC_bastore.test(3, false)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_caload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_caload");
        String runString = null;
        try {
        // test(0) == '\0'
            runString = "test(0)";
            if ((char) 0 != test.bytecode.BC_caload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 'a'
            runString = "test(1)";
            if ((char) 97 != test.bytecode.BC_caload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == ' '
            runString = "test(2)";
            if ((char) 32 != test.bytecode.BC_caload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == '\23420'
            runString = "test(3)";
            if ((char) 10000 != test.bytecode.BC_caload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_castore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_castore");
        String runString = null;
        try {
        // test(0,'a') == 'a'
            runString = "test(0,'a')";
            if ((char) 97 != test.bytecode.BC_castore.test(0, (char) 97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,'A') == 'A'
            runString = "test(1,'A')";
            if ((char) 65 != test.bytecode.BC_castore.test(1, (char) 65)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,'*') == '*'
            runString = "test(2,'*')";
            if ((char) 42 != test.bytecode.BC_castore.test(2, (char) 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,'x') == 'x'
            runString = "test(3,'x')";
            if ((char) 120 != test.bytecode.BC_castore.test(3, (char) 120)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_checkcast() {
        JavaTesterRunScheme.begin("test.bytecode.BC_checkcast");
        String runString = null;
        try {
        // test(0) == -1
            runString = "test(0)";
            if (-1 != test.bytecode.BC_checkcast.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if (-1 != test.bytecode.BC_checkcast.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.bytecode.BC_checkcast.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_d2f() {
        JavaTesterRunScheme.begin("test.bytecode.BC_d2f");
        String runString = null;
        try {
        // test(0.0) == 0.0
            runString = "test(0.0)";
            if (0.0f != test.bytecode.BC_d2f.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1.0
            runString = "test(1.0)";
            if (1.0f != test.bytecode.BC_d2f.test(1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.06) == -1.06
            runString = "test(-1.06)";
            if (-1.06f != test.bytecode.BC_d2f.test(-1.06)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_d2i() {
        JavaTesterRunScheme.begin("test.bytecode.BC_d2i");
        String runString = null;
        try {
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0 != test.bytecode.BC_d2i.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1 != test.bytecode.BC_d2i.test(1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.06) == -1
            runString = "test(-1.06)";
            if (-1 != test.bytecode.BC_d2i.test(-1.06)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-156.82743) == -156
            runString = "test(-156.82743)";
            if (-156 != test.bytecode.BC_d2i.test(-156.82743)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_d2i_nan() {
        JavaTesterRunScheme.begin("test.bytecode.BC_d2i_nan");
        String runString = null;
        try {
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1 != test.bytecode.BC_d2i_nan.test(1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0 != test.bytecode.BC_d2i_nan.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_d2l() {
        JavaTesterRunScheme.begin("test.bytecode.BC_d2l");
        String runString = null;
        try {
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0L != test.bytecode.BC_d2l.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1L != test.bytecode.BC_d2l.test(1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.06) == -1
            runString = "test(-1.06)";
            if (-1L != test.bytecode.BC_d2l.test(-1.06)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-156.82743) == -156
            runString = "test(-156.82743)";
            if (-156L != test.bytecode.BC_d2l.test(-156.82743)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_d2l_nan() {
        JavaTesterRunScheme.begin("test.bytecode.BC_d2l_nan");
        String runString = null;
        try {
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1L != test.bytecode.BC_d2l_nan.test(1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0L != test.bytecode.BC_d2l_nan.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dadd() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dadd");
        String runString = null;
        try {
        // test(0.0,0.0) == 0.0
            runString = "test(0.0,0.0)";
            if (0.0 != test.bytecode.BC_dadd.test(0.0, 0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0,1.0) == 2.0
            runString = "test(1.0,1.0)";
            if (2.0 != test.bytecode.BC_dadd.test(1.0, 1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(253.11,54.43) == 307.54
            runString = "test(253.11,54.43)";
            if (307.54 != test.bytecode.BC_dadd.test(253.11, 54.43)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_daload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_daload");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0 != test.bytecode.BC_daload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1.1
            runString = "test(1)";
            if (-1.1 != test.bytecode.BC_daload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4.32
            runString = "test(2)";
            if (4.32 != test.bytecode.BC_daload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 6.06
            runString = "test(3)";
            if (6.06 != test.bytecode.BC_daload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dastore");
        String runString = null;
        try {
        // test(0,0.01) == 0.01
            runString = "test(0,0.01)";
            if (0.01 != test.bytecode.BC_dastore.test(0, 0.01)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1.4) == -1.4
            runString = "test(1,-1.4)";
            if (-1.4 != test.bytecode.BC_dastore.test(1, -1.4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,0.01) == 0.01
            runString = "test(2,0.01)";
            if (0.01 != test.bytecode.BC_dastore.test(2, 0.01)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-1.4) == -1.4
            runString = "test(3,-1.4)";
            if (-1.4 != test.bytecode.BC_dastore.test(3, -1.4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dcmp() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dcmp");
        String runString = null;
        try {
        // test(0.0,-0.1) == false
            runString = "test(0.0,-0.1)";
            if (false != test.bytecode.BC_dcmp.test(0.0, -0.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(78.0,78.001) == true
            runString = "test(78.0,78.001)";
            if (true != test.bytecode.BC_dcmp.test(78.0, 78.001)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ddiv() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ddiv");
        String runString = null;
        try {
        // test(311.0,10.0) == 31.1
            runString = "test(311.0,10.0)";
            if (31.1 != test.bytecode.BC_ddiv.test(311.0, 10.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dmul() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dmul");
        String runString = null;
        try {
        // test(311.0,10.0) == 3110.0
            runString = "test(311.0,10.0)";
            if (3110.0 != test.bytecode.BC_dmul.test(311.0, 10.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dneg() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dneg");
        String runString = null;
        try {
        // test(0.0) == -0.0
            runString = "test(0.0)";
            if (-0.0 != test.bytecode.BC_dneg.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.01) == 1.01
            runString = "test(-1.01)";
            if (1.01 != test.bytecode.BC_dneg.test(-1.01)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7263.8734) == -7263.8734
            runString = "test(7263.8734)";
            if (-7263.8734 != test.bytecode.BC_dneg.test(7263.8734)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_drem() {
        JavaTesterRunScheme.begin("test.bytecode.BC_drem");
        String runString = null;
        try {
        // test(311.0,10.0) == 1.0
            runString = "test(311.0,10.0)";
            if (1.0 != test.bytecode.BC_drem.test(311.0, 10.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dreturn() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dreturn");
        String runString = null;
        try {
        // test(0.0) == 0.0
            runString = "test(0.0)";
            if (0.0 != test.bytecode.BC_dreturn.test(0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.1) == 1.1
            runString = "test(1.1)";
            if (1.1 != test.bytecode.BC_dreturn.test(1.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.4) == -1.4
            runString = "test(-1.4)";
            if (-1.4 != test.bytecode.BC_dreturn.test(-1.4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256.33) == 256.33
            runString = "test(256.33)";
            if (256.33 != test.bytecode.BC_dreturn.test(256.33)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000.001) == 1000.001
            runString = "test(1000.001)";
            if (1000.001 != test.bytecode.BC_dreturn.test(1000.001)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_dsub() {
        JavaTesterRunScheme.begin("test.bytecode.BC_dsub");
        String runString = null;
        try {
        // test(0.0,0.0) == 0.0
            runString = "test(0.0,0.0)";
            if (0.0 != test.bytecode.BC_dsub.test(0.0, 0.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0,1.0) == 0.0
            runString = "test(1.0,1.0)";
            if (0.0 != test.bytecode.BC_dsub.test(1.0, 1.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(253.11,54.43) == 198.68
            runString = "test(253.11,54.43)";
            if (198.68 != test.bytecode.BC_dsub.test(253.11, 54.43)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2d() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2d");
        String runString = null;
        try {
        // test(0.0) == 0.0
            runString = "test(0.0)";
            if (0.0 != test.bytecode.BC_f2d.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1.0
            runString = "test(1.0)";
            if (1.0 != test.bytecode.BC_f2d.test(1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2.0) == -2.0
            runString = "test(-2.0)";
            if (-2.0 != test.bytecode.BC_f2d.test(-2.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2i() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2i");
        String runString = null;
        try {
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0 != test.bytecode.BC_f2i.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1 != test.bytecode.BC_f2i.test(1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.06) == -1
            runString = "test(-1.06)";
            if (-1 != test.bytecode.BC_f2i.test(-1.06f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-156.82742) == -156
            runString = "test(-156.82742)";
            if (-156 != test.bytecode.BC_f2i.test(-156.82742f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2i_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2i_2");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.bytecode.BC_f2i_2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2i_nan() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2i_nan");
        String runString = null;
        try {
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1 != test.bytecode.BC_f2i_nan.test(1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0 != test.bytecode.BC_f2i_nan.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2l() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2l");
        String runString = null;
        try {
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0L != test.bytecode.BC_f2l.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1L != test.bytecode.BC_f2l.test(1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.06) == -1
            runString = "test(-1.06)";
            if (-1L != test.bytecode.BC_f2l.test(-1.06f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-156.82742) == -156
            runString = "test(-156.82742)";
            if (-156L != test.bytecode.BC_f2l.test(-156.82742f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_f2l_nan() {
        JavaTesterRunScheme.begin("test.bytecode.BC_f2l_nan");
        String runString = null;
        try {
        // test(1.0) == 1
            runString = "test(1.0)";
            if (1L != test.bytecode.BC_f2l_nan.test(1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0.0) == 0
            runString = "test(0.0)";
            if (0L != test.bytecode.BC_f2l_nan.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fadd() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fadd");
        String runString = null;
        try {
        // test(0.0,0.0) == 0.0
            runString = "test(0.0,0.0)";
            if (0.0f != test.bytecode.BC_fadd.test(0.0f, 0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0,1.0) == 2.0
            runString = "test(1.0,1.0)";
            if (2.0f != test.bytecode.BC_fadd.test(1.0f, 1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(253.11,54.43) == 307.54
            runString = "test(253.11,54.43)";
            if (307.54f != test.bytecode.BC_fadd.test(253.11f, 54.43f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_faload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_faload");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0f != test.bytecode.BC_faload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1.1
            runString = "test(1)";
            if (-1.1f != test.bytecode.BC_faload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4.32
            runString = "test(2)";
            if (4.32f != test.bytecode.BC_faload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 6.06
            runString = "test(3)";
            if (6.06f != test.bytecode.BC_faload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fastore");
        String runString = null;
        try {
        // test(0,0.01) == 0.01
            runString = "test(0,0.01)";
            if (0.01f != test.bytecode.BC_fastore.test(0, 0.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1.4) == -1.4
            runString = "test(1,-1.4)";
            if (-1.4f != test.bytecode.BC_fastore.test(1, -1.4f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,0.01) == 0.01
            runString = "test(2,0.01)";
            if (0.01f != test.bytecode.BC_fastore.test(2, 0.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-1.4) == -1.4
            runString = "test(3,-1.4)";
            if (-1.4f != test.bytecode.BC_fastore.test(3, -1.4f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fcmp() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fcmp");
        String runString = null;
        try {
        // test(0.0,-0.1) == false
            runString = "test(0.0,-0.1)";
            if (false != test.bytecode.BC_fcmp.test(0.0f, -0.1f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(78.0,78.001) == true
            runString = "test(78.0,78.001)";
            if (true != test.bytecode.BC_fcmp.test(78.0f, 78.001f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fdiv() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fdiv");
        String runString = null;
        try {
        // test(311.0,10.0) == 31.1
            runString = "test(311.0,10.0)";
            if (31.1f != test.bytecode.BC_fdiv.test(311.0f, 10.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fload");
        String runString = null;
        try {
        // test(-1.0) == -1.0
            runString = "test(-1.0)";
            if (-1.0f != test.bytecode.BC_fload.test(-1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.01) == -1.01
            runString = "test(-1.01)";
            if (-1.01f != test.bytecode.BC_fload.test(-1.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fload_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fload_2");
        String runString = null;
        try {
        // test(0.0,-1.0) == -1.0
            runString = "test(0.0,-1.0)";
            if (-1.0f != test.bytecode.BC_fload_2.test(0.0f, -1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0.0,-1.01) == -1.01
            runString = "test(0.0,-1.01)";
            if (-1.01f != test.bytecode.BC_fload_2.test(0.0f, -1.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fmul() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fmul");
        String runString = null;
        try {
        // test(311.0,10.0) == 3110.0
            runString = "test(311.0,10.0)";
            if (3110.0f != test.bytecode.BC_fmul.test(311.0f, 10.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fneg() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fneg");
        String runString = null;
        try {
        // test(0.0) == -0.0
            runString = "test(0.0)";
            if (-0.0f != test.bytecode.BC_fneg.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.01) == 1.01
            runString = "test(-1.01)";
            if (1.01f != test.bytecode.BC_fneg.test(-1.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7263.8735) == -7263.8735
            runString = "test(7263.8735)";
            if (-7263.8735f != test.bytecode.BC_fneg.test(7263.8735f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_frem() {
        JavaTesterRunScheme.begin("test.bytecode.BC_frem");
        String runString = null;
        try {
        // test(311.0,10.0) == 1.0
            runString = "test(311.0,10.0)";
            if (1.0f != test.bytecode.BC_frem.test(311.0f, 10.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_freturn() {
        JavaTesterRunScheme.begin("test.bytecode.BC_freturn");
        String runString = null;
        try {
        // test(0.0) == 0.0
            runString = "test(0.0)";
            if (0.0f != test.bytecode.BC_freturn.test(0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.1) == 1.1
            runString = "test(1.1)";
            if (1.1f != test.bytecode.BC_freturn.test(1.1f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1.4) == -1.4
            runString = "test(-1.4)";
            if (-1.4f != test.bytecode.BC_freturn.test(-1.4f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256.33) == 256.33
            runString = "test(256.33)";
            if (256.33f != test.bytecode.BC_freturn.test(256.33f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000.001) == 1000.001
            runString = "test(1000.001)";
            if (1000.001f != test.bytecode.BC_freturn.test(1000.001f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_fsub() {
        JavaTesterRunScheme.begin("test.bytecode.BC_fsub");
        String runString = null;
        try {
        // test(0.0,0.0) == 0.0
            runString = "test(0.0,0.0)";
            if (0.0f != test.bytecode.BC_fsub.test(0.0f, 0.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1.0,1.0) == 0.0
            runString = "test(1.0,1.0)";
            if (0.0f != test.bytecode.BC_fsub.test(1.0f, 1.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(253.11,54.43) == 198.68
            runString = "test(253.11,54.43)";
            if (198.68f != test.bytecode.BC_fsub.test(253.11f, 54.43f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getfield() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getfield");
        String runString = null;
        try {
        // test(0) == 13
            runString = "test(0)";
            if (13 != test.bytecode.BC_getfield.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_b() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_b");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if ((byte) 11 != test.bytecode.BC_getstatic_b.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if ((byte) 11 != test.bytecode.BC_getstatic_b.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 11
            runString = "test(2)";
            if ((byte) 11 != test.bytecode.BC_getstatic_b.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_c() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_c");
        String runString = null;
        try {
        // test(0) == '\13'
            runString = "test(0)";
            if ((char) 11 != test.bytecode.BC_getstatic_c.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == '\13'
            runString = "test(1)";
            if ((char) 11 != test.bytecode.BC_getstatic_c.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_d() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_d");
        String runString = null;
        try {
        // test(0) == 11.0
            runString = "test(0)";
            if (11.0 != test.bytecode.BC_getstatic_d.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11.0
            runString = "test(1)";
            if (11.0 != test.bytecode.BC_getstatic_d.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_f() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_f");
        String runString = null;
        try {
        // test(0) == 11.0
            runString = "test(0)";
            if (11.0f != test.bytecode.BC_getstatic_f.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11.0
            runString = "test(1)";
            if (11.0f != test.bytecode.BC_getstatic_f.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_i() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_i");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_getstatic_i.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11 != test.bytecode.BC_getstatic_i.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 11
            runString = "test(2)";
            if (11 != test.bytecode.BC_getstatic_i.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 11
            runString = "test(3)";
            if (11 != test.bytecode.BC_getstatic_i.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == 11
            runString = "test(-4)";
            if (11 != test.bytecode.BC_getstatic_i.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_l() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_l");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11L != test.bytecode.BC_getstatic_l.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11L != test.bytecode.BC_getstatic_l.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_s() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_s");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if ((short) 11 != test.bytecode.BC_getstatic_s.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if ((short) 11 != test.bytecode.BC_getstatic_s.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_getstatic_z() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_z");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.bytecode.BC_getstatic_z.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.bytecode.BC_getstatic_z.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2b() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2b");
        String runString = null;
        try {
        // test(-1) == -1
            runString = "test(-1)";
            if ((byte) -1 != test.bytecode.BC_i2b.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if ((byte) 2 != test.bytecode.BC_i2b.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(255) == -1
            runString = "test(255)";
            if ((byte) -1 != test.bytecode.BC_i2b.test(255)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(128) == -128
            runString = "test(128)";
            if ((byte) -128 != test.bytecode.BC_i2b.test(128)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2c() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2c");
        String runString = null;
        try {
        // test(-1) == '\177777'
            runString = "test(-1)";
            if ((char) 65535 != test.bytecode.BC_i2c.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(645) == '\1205'
            runString = "test(645)";
            if ((char) 645 != test.bytecode.BC_i2c.test(645)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(65535) == '\177777'
            runString = "test(65535)";
            if ((char) 65535 != test.bytecode.BC_i2c.test(65535)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2d() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2d");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0 != test.bytecode.BC_i2d.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0 != test.bytecode.BC_i2d.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-34) == -34.0
            runString = "test(-34)";
            if (-34.0 != test.bytecode.BC_i2d.test(-34)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2f() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2f");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0f != test.bytecode.BC_i2f.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0f != test.bytecode.BC_i2f.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-34) == -34.0
            runString = "test(-34)";
            if (-34.0f != test.bytecode.BC_i2f.test(-34)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2l() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2l");
        String runString = null;
        try {
        // test(1) == 1
            runString = "test(1)";
            if (1L != test.bytecode.BC_i2l.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2L != test.bytecode.BC_i2l.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3L != test.bytecode.BC_i2l.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1L != test.bytecode.BC_i2l.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483647) == -2147483647
            runString = "test(-2147483647)";
            if (-2147483647L != test.bytecode.BC_i2l.test(-2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648) == -2147483648
            runString = "test(-2147483648)";
            if (-2147483648L != test.bytecode.BC_i2l.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == 2147483647
            runString = "test(2147483647)";
            if (2147483647L != test.bytecode.BC_i2l.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_i2s() {
        JavaTesterRunScheme.begin("test.bytecode.BC_i2s");
        String runString = null;
        try {
        // test(-1) == -1
            runString = "test(-1)";
            if ((short) -1 != test.bytecode.BC_i2s.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(34) == 34
            runString = "test(34)";
            if ((short) 34 != test.bytecode.BC_i2s.test(34)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(65535) == -1
            runString = "test(65535)";
            if ((short) -1 != test.bytecode.BC_i2s.test(65535)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(32768) == -32768
            runString = "test(32768)";
            if ((short) -32768 != test.bytecode.BC_i2s.test(32768)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iadd() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iadd");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3 != test.bytecode.BC_iadd.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1 != test.bytecode.BC_iadd.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 100
            runString = "test(33,67)";
            if (100 != test.bytecode.BC_iadd.test(33, 67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0 != test.bytecode.BC_iadd.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647 != test.bytecode.BC_iadd.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,1) == -2147483648
            runString = "test(2147483647,1)";
            if (-2147483648 != test.bytecode.BC_iadd.test(2147483647, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483647,-2) == 2147483647
            runString = "test(-2147483647,-2)";
            if (2147483647 != test.bytecode.BC_iadd.test(-2147483647, -2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iadd2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iadd2");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3 != test.bytecode.BC_iadd2.test((byte) 1, (byte) 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1 != test.bytecode.BC_iadd2.test((byte) 0, (byte) -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 100
            runString = "test(33,67)";
            if (100 != test.bytecode.BC_iadd2.test((byte) 33, (byte) 67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0 != test.bytecode.BC_iadd2.test((byte) 1, (byte) -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-128,1) == -127
            runString = "test(-128,1)";
            if (-127 != test.bytecode.BC_iadd2.test((byte) -128, (byte) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(127,1) == 128
            runString = "test(127,1)";
            if (128 != test.bytecode.BC_iadd2.test((byte) 127, (byte) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iadd3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iadd3");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3 != test.bytecode.BC_iadd3.test((short) 1, (short) 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1 != test.bytecode.BC_iadd3.test((short) 0, (short) -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 100
            runString = "test(33,67)";
            if (100 != test.bytecode.BC_iadd3.test((short) 33, (short) 67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0 != test.bytecode.BC_iadd3.test((short) 1, (short) -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-128,1) == -127
            runString = "test(-128,1)";
            if (-127 != test.bytecode.BC_iadd3.test((short) -128, (short) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(127,1) == 128
            runString = "test(127,1)";
            if (128 != test.bytecode.BC_iadd3.test((short) 127, (short) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-32768,1) == -32767
            runString = "test(-32768,1)";
            if (-32767 != test.bytecode.BC_iadd3.test((short) -32768, (short) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(32767,1) == 32768
            runString = "test(32767,1)";
            if (32768 != test.bytecode.BC_iadd3.test((short) 32767, (short) 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iaload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iaload");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_iaload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if (-1 != test.bytecode.BC_iaload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if (4 != test.bytecode.BC_iaload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 1000000000
            runString = "test(3)";
            if (1000000000 != test.bytecode.BC_iaload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iand() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iand");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0 != test.bytecode.BC_iand.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0 != test.bytecode.BC_iand.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 31
            runString = "test(31,63)";
            if (31 != test.bytecode.BC_iand.test(31, 63)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 4
            runString = "test(6,4)";
            if (4 != test.bytecode.BC_iand.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == 0
            runString = "test(-2147483648,1)";
            if (0 != test.bytecode.BC_iand.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iastore");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0 != test.bytecode.BC_iastore.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if (-1 != test.bytecode.BC_iastore.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,11) == 11
            runString = "test(2,11)";
            if (11 != test.bytecode.BC_iastore.test(2, 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-14) == -14
            runString = "test(3,-14)";
            if (-14 != test.bytecode.BC_iastore.test(3, -14)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iconst() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iconst");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_iconst.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_iconst.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_iconst.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_iconst.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.bytecode.BC_iconst.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 5
            runString = "test(5)";
            if (5 != test.bytecode.BC_iconst.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 375
            runString = "test(6)";
            if (375 != test.bytecode.BC_iconst.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_idiv() {
        JavaTesterRunScheme.begin("test.bytecode.BC_idiv");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0 != test.bytecode.BC_idiv.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1) == -2
            runString = "test(2,-1)";
            if (-2 != test.bytecode.BC_idiv.test(2, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256,4) == 64
            runString = "test(256,4)";
            if (64 != test.bytecode.BC_idiv.test(256, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(135,7) == 19
            runString = "test(135,7)";
            if (19 != test.bytecode.BC_idiv.test(135, 7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifeq() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifeq");
        String runString = null;
        try {
        // test(0) == 2
            runString = "test(0)";
            if (2 != test.bytecode.BC_ifeq.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -2
            runString = "test(1)";
            if (-2 != test.bytecode.BC_ifeq.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifeq_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifeq_2");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.bytecode.BC_ifeq_2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.bytecode.BC_ifeq_2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifeq_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifeq_3");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.bytecode.BC_ifeq_3.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.bytecode.BC_ifeq_3.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifge() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifge");
        String runString = null;
        try {
        // test(0) == 2
            runString = "test(0)";
            if (2 != test.bytecode.BC_ifge.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 2
            runString = "test(1)";
            if (2 != test.bytecode.BC_ifge.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifge_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifge_2");
        String runString = null;
        try {
        // test(0,1) == false
            runString = "test(0,1)";
            if (false != test.bytecode.BC_ifge_2.test(0, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,0) == true
            runString = "test(1,0)";
            if (true != test.bytecode.BC_ifge_2.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1) == true
            runString = "test(1,1)";
            if (true != test.bytecode.BC_ifge_2.test(1, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-100) == true
            runString = "test(0,-100)";
            if (true != test.bytecode.BC_ifge_2.test(0, -100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1,0) == false
            runString = "test(-1,0)";
            if (false != test.bytecode.BC_ifge_2.test(-1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-12,-12) == true
            runString = "test(-12,-12)";
            if (true != test.bytecode.BC_ifge_2.test(-12, -12)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifge_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifge_3");
        String runString = null;
        try {
        // test(0,1) == true
            runString = "test(0,1)";
            if (true != test.bytecode.BC_ifge_3.test(0, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,0) == false
            runString = "test(1,0)";
            if (false != test.bytecode.BC_ifge_3.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1) == false
            runString = "test(1,1)";
            if (false != test.bytecode.BC_ifge_3.test(1, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-100) == false
            runString = "test(0,-100)";
            if (false != test.bytecode.BC_ifge_3.test(0, -100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1,0) == true
            runString = "test(-1,0)";
            if (true != test.bytecode.BC_ifge_3.test(-1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-12,-12) == false
            runString = "test(-12,-12)";
            if (false != test.bytecode.BC_ifge_3.test(-12, -12)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifgt() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifgt");
        String runString = null;
        try {
        // test(0) == -2
            runString = "test(0)";
            if (-2 != test.bytecode.BC_ifgt.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 2
            runString = "test(1)";
            if (2 != test.bytecode.BC_ifgt.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ificmplt1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ificmplt1");
        String runString = null;
        try {
        // test(0) == 12
            runString = "test(0)";
            if (12 != test.bytecode.BC_ificmplt1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 13
            runString = "test(1)";
            if (13 != test.bytecode.BC_ificmplt1.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 13
            runString = "test(2)";
            if (13 != test.bytecode.BC_ificmplt1.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ificmplt2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ificmplt2");
        String runString = null;
        try {
        // test(0) == 12
            runString = "test(0)";
            if (12 != test.bytecode.BC_ificmplt2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 12
            runString = "test(1)";
            if (12 != test.bytecode.BC_ificmplt2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 13
            runString = "test(2)";
            if (13 != test.bytecode.BC_ificmplt2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ificmpne1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ificmpne1");
        String runString = null;
        try {
        // test(0) == 13
            runString = "test(0)";
            if (13 != test.bytecode.BC_ificmpne1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 12
            runString = "test(1)";
            if (12 != test.bytecode.BC_ificmpne1.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 13
            runString = "test(2)";
            if (13 != test.bytecode.BC_ificmpne1.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ificmpne2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ificmpne2");
        String runString = null;
        try {
        // test(0) == 13
            runString = "test(0)";
            if (13 != test.bytecode.BC_ificmpne2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 12
            runString = "test(1)";
            if (12 != test.bytecode.BC_ificmpne2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 13
            runString = "test(2)";
            if (13 != test.bytecode.BC_ificmpne2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifle() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifle");
        String runString = null;
        try {
        // test(0) == 2
            runString = "test(0)";
            if (2 != test.bytecode.BC_ifle.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -2
            runString = "test(1)";
            if (-2 != test.bytecode.BC_ifle.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iflt() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iflt");
        String runString = null;
        try {
        // test(0) == -2
            runString = "test(0)";
            if (-2 != test.bytecode.BC_iflt.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -2
            runString = "test(1)";
            if (-2 != test.bytecode.BC_iflt.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 2
            runString = "test(-1)";
            if (2 != test.bytecode.BC_iflt.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifne() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifne");
        String runString = null;
        try {
        // test(0) == -2
            runString = "test(0)";
            if (-2 != test.bytecode.BC_ifne.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 2
            runString = "test(1)";
            if (2 != test.bytecode.BC_ifne.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnonnull() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnonnull");
        String runString = null;
        try {
        // test(null) == 2
            runString = "test(null)";
            if (2 != test.bytecode.BC_ifnonnull.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == -2
            runString = "test(\"\")";
            if (-2 != test.bytecode.BC_ifnonnull.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnonnull_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnonnull_2");
        String runString = null;
        try {
        // test(null) == false
            runString = "test(null)";
            if (false != test.bytecode.BC_ifnonnull_2.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == true
            runString = "test(\"\")";
            if (true != test.bytecode.BC_ifnonnull_2.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnonnull_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnonnull_3");
        String runString = null;
        try {
        // test(null) == 2
            runString = "test(null)";
            if (2 != test.bytecode.BC_ifnonnull_3.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == 1
            runString = "test(\"\")";
            if (1 != test.bytecode.BC_ifnonnull_3.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnull() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnull");
        String runString = null;
        try {
        // test(null) == -2
            runString = "test(null)";
            if (-2 != test.bytecode.BC_ifnull.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == 2
            runString = "test(\"\")";
            if (2 != test.bytecode.BC_ifnull.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnull_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnull_2");
        String runString = null;
        try {
        // test(null) == true
            runString = "test(null)";
            if (true != test.bytecode.BC_ifnull_2.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == false
            runString = "test(\"\")";
            if (false != test.bytecode.BC_ifnull_2.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ifnull_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ifnull_3");
        String runString = null;
        try {
        // test(null) == 1
            runString = "test(null)";
            if (1 != test.bytecode.BC_ifnull_3.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("") == 2
            runString = "test(\"\")";
            if (2 != test.bytecode.BC_ifnull_3.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iinc_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iinc_1");
        String runString = null;
        try {
        // test(1) == 2
            runString = "test(1)";
            if (2 != test.bytecode.BC_iinc_1.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 3
            runString = "test(2)";
            if (3 != test.bytecode.BC_iinc_1.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 5
            runString = "test(4)";
            if (5 != test.bytecode.BC_iinc_1.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 0
            runString = "test(-1)";
            if (0 != test.bytecode.BC_iinc_1.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iinc_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iinc_2");
        String runString = null;
        try {
        // test(1) == 3
            runString = "test(1)";
            if (3 != test.bytecode.BC_iinc_2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if (4 != test.bytecode.BC_iinc_2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 6
            runString = "test(4)";
            if (6 != test.bytecode.BC_iinc_2.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == 0
            runString = "test(-2)";
            if (0 != test.bytecode.BC_iinc_2.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iinc_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iinc_3");
        String runString = null;
        try {
        // test(1) == 52
            runString = "test(1)";
            if (52 != test.bytecode.BC_iinc_3.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 53
            runString = "test(2)";
            if (53 != test.bytecode.BC_iinc_3.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 55
            runString = "test(4)";
            if (55 != test.bytecode.BC_iinc_3.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 50
            runString = "test(-1)";
            if (50 != test.bytecode.BC_iinc_3.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_0() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_0");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_iload_0.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1 != test.bytecode.BC_iload_0.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_iload_0.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000345) == 1000345
            runString = "test(1000345)";
            if (1000345 != test.bytecode.BC_iload_0.test(1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_0_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_0_1");
        String runString = null;
        try {
        // test(0) == 1
            runString = "test(0)";
            if (1 != test.bytecode.BC_iload_0_1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 0
            runString = "test(-1)";
            if (0 != test.bytecode.BC_iload_0_1.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 3
            runString = "test(2)";
            if (3 != test.bytecode.BC_iload_0_1.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000345) == 1000346
            runString = "test(1000345)";
            if (1000346 != test.bytecode.BC_iload_0_1.test(1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_0_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_0_2");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_iload_0_2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1 != test.bytecode.BC_iload_0_2.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_iload_0_2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000345) == 1000345
            runString = "test(1000345)";
            if (1000345 != test.bytecode.BC_iload_0_2.test(1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_1");
        String runString = null;
        try {
        // test(1,0) == 0
            runString = "test(1,0)";
            if (0 != test.bytecode.BC_iload_1.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if (-1 != test.bytecode.BC_iload_1.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,2) == 2
            runString = "test(1,2)";
            if (2 != test.bytecode.BC_iload_1.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1000345) == 1000345
            runString = "test(1,1000345)";
            if (1000345 != test.bytecode.BC_iload_1.test(1, 1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_1_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_1_1");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_iload_1_1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1 != test.bytecode.BC_iload_1_1.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_iload_1_1.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000345) == 1000345
            runString = "test(1000345)";
            if (1000345 != test.bytecode.BC_iload_1_1.test(1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_2");
        String runString = null;
        try {
        // test(1,1,0) == 0
            runString = "test(1,1,0)";
            if (0 != test.bytecode.BC_iload_2.test(1, 1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,-1) == -1
            runString = "test(1,1,-1)";
            if (-1 != test.bytecode.BC_iload_2.test(1, 1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,2) == 2
            runString = "test(1,1,2)";
            if (2 != test.bytecode.BC_iload_2.test(1, 1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1000345) == 1000345
            runString = "test(1,1,1000345)";
            if (1000345 != test.bytecode.BC_iload_2.test(1, 1, 1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iload_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iload_3");
        String runString = null;
        try {
        // test(1,1,1,0) == 0
            runString = "test(1,1,1,0)";
            if (0 != test.bytecode.BC_iload_3.test(1, 1, 1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,-1) == -1
            runString = "test(1,1,1,-1)";
            if (-1 != test.bytecode.BC_iload_3.test(1, 1, 1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,2) == 2
            runString = "test(1,1,1,2)";
            if (2 != test.bytecode.BC_iload_3.test(1, 1, 1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,1000345) == 1000345
            runString = "test(1,1,1,1000345)";
            if (1000345 != test.bytecode.BC_iload_3.test(1, 1, 1, 1000345)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_imul() {
        JavaTesterRunScheme.begin("test.bytecode.BC_imul");
        String runString = null;
        try {
        // test(1,2) == 2
            runString = "test(1,2)";
            if (2 != test.bytecode.BC_imul.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0 != test.bytecode.BC_imul.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 2211
            runString = "test(33,67)";
            if (2211 != test.bytecode.BC_imul.test(33, 67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if (-1 != test.bytecode.BC_imul.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483648
            runString = "test(-2147483648,1)";
            if (-2147483648 != test.bytecode.BC_imul.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,-1) == -2147483647
            runString = "test(2147483647,-1)";
            if (-2147483647 != test.bytecode.BC_imul.test(2147483647, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,-1) == -2147483648
            runString = "test(-2147483648,-1)";
            if (-2147483648 != test.bytecode.BC_imul.test(-2147483648, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ineg() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ineg");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_ineg.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 1
            runString = "test(-1)";
            if (1 != test.bytecode.BC_ineg.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7263) == -7263
            runString = "test(7263)";
            if (-7263 != test.bytecode.BC_ineg.test(7263)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648) == -2147483648
            runString = "test(-2147483648)";
            if (-2147483648 != test.bytecode.BC_ineg.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_instanceof() {
        JavaTesterRunScheme.begin("test.bytecode.BC_instanceof");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.bytecode.BC_instanceof.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.bytecode.BC_instanceof.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.bytecode.BC_instanceof.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.bytecode.BC_instanceof.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.bytecode.BC_instanceof.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_invokeinterface() {
        JavaTesterRunScheme.begin("test.bytecode.BC_invokeinterface");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_invokeinterface.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_invokeinterface.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_invokeinterface.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_invokeinterface.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_invokeinterface.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_invokespecial() {
        JavaTesterRunScheme.begin("test.bytecode.BC_invokespecial");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_invokespecial.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_invokespecial.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_invokespecial.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_invokespecial.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_invokespecial.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_invokespecial2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_invokespecial2");
        String runString = null;
        try {
        // test(0) == 7
            runString = "test(0)";
            if (7 != test.bytecode.BC_invokespecial2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 8
            runString = "test(1)";
            if (8 != test.bytecode.BC_invokespecial2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 9
            runString = "test(2)";
            if (9 != test.bytecode.BC_invokespecial2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 10
            runString = "test(3)";
            if (10 != test.bytecode.BC_invokespecial2.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == 3
            runString = "test(-4)";
            if (3 != test.bytecode.BC_invokespecial2.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_invokestatic() {
        JavaTesterRunScheme.begin("test.bytecode.BC_invokestatic");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_invokestatic.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_invokestatic.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_invokestatic.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_invokestatic.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_invokestatic.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_invokevirtual() {
        JavaTesterRunScheme.begin("test.bytecode.BC_invokevirtual");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_invokevirtual.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_invokevirtual.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_invokevirtual.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_invokevirtual.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_invokevirtual.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ior() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ior");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3 != test.bytecode.BC_ior.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1 != test.bytecode.BC_ior.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 63
            runString = "test(31,63)";
            if (63 != test.bytecode.BC_ior.test(31, 63)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 6
            runString = "test(6,4)";
            if (6 != test.bytecode.BC_ior.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647 != test.bytecode.BC_ior.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_irem() {
        JavaTesterRunScheme.begin("test.bytecode.BC_irem");
        String runString = null;
        try {
        // test(1,2) == 1
            runString = "test(1,2)";
            if (1 != test.bytecode.BC_irem.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1) == 0
            runString = "test(2,-1)";
            if (0 != test.bytecode.BC_irem.test(2, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256,4) == 0
            runString = "test(256,4)";
            if (0 != test.bytecode.BC_irem.test(256, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(135,7) == 2
            runString = "test(135,7)";
            if (2 != test.bytecode.BC_irem.test(135, 7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ireturn() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ireturn");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_ireturn.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_ireturn.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1 != test.bytecode.BC_ireturn.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256) == 256
            runString = "test(256)";
            if (256 != test.bytecode.BC_ireturn.test(256)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ishl() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ishl");
        String runString = null;
        try {
        // test(1,2) == 4
            runString = "test(1,2)";
            if (4 != test.bytecode.BC_ishl.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0 != test.bytecode.BC_ishl.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 62
            runString = "test(31,1)";
            if (62 != test.bytecode.BC_ishl.test(31, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 96
            runString = "test(6,4)";
            if (96 != test.bytecode.BC_ishl.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == 0
            runString = "test(-2147483648,1)";
            if (0 != test.bytecode.BC_ishl.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ishr() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ishr");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0 != test.bytecode.BC_ishr.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67,2) == 16
            runString = "test(67,2)";
            if (16 != test.bytecode.BC_ishr.test(67, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 15
            runString = "test(31,1)";
            if (15 != test.bytecode.BC_ishr.test(31, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 0
            runString = "test(6,4)";
            if (0 != test.bytecode.BC_ishr.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,16) == -32768
            runString = "test(-2147483648,16)";
            if (-32768 != test.bytecode.BC_ishr.test(-2147483648, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_isub() {
        JavaTesterRunScheme.begin("test.bytecode.BC_isub");
        String runString = null;
        try {
        // test(1,-2) == 3
            runString = "test(1,-2)";
            if (3 != test.bytecode.BC_isub.test(1, -2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,1) == -1
            runString = "test(0,1)";
            if (-1 != test.bytecode.BC_isub.test(0, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,-67) == 100
            runString = "test(33,-67)";
            if (100 != test.bytecode.BC_isub.test(33, -67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1) == 0
            runString = "test(1,1)";
            if (0 != test.bytecode.BC_isub.test(1, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,-1) == -2147483647
            runString = "test(-2147483648,-1)";
            if (-2147483647 != test.bytecode.BC_isub.test(-2147483648, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,-1) == -2147483648
            runString = "test(2147483647,-1)";
            if (-2147483648 != test.bytecode.BC_isub.test(2147483647, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483647,2) == 2147483647
            runString = "test(-2147483647,2)";
            if (2147483647 != test.bytecode.BC_isub.test(-2147483647, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_iushr() {
        JavaTesterRunScheme.begin("test.bytecode.BC_iushr");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0 != test.bytecode.BC_iushr.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67,2) == 16
            runString = "test(67,2)";
            if (16 != test.bytecode.BC_iushr.test(67, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 15
            runString = "test(31,1)";
            if (15 != test.bytecode.BC_iushr.test(31, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 0
            runString = "test(6,4)";
            if (0 != test.bytecode.BC_iushr.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,16) == 32768
            runString = "test(-2147483648,16)";
            if (32768 != test.bytecode.BC_iushr.test(-2147483648, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ixor() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ixor");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3 != test.bytecode.BC_ixor.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1 != test.bytecode.BC_ixor.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 32
            runString = "test(31,63)";
            if (32 != test.bytecode.BC_ixor.test(31, 63)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 2
            runString = "test(6,4)";
            if (2 != test.bytecode.BC_ixor.test(6, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647 != test.bytecode.BC_ixor.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_l2d() {
        JavaTesterRunScheme.begin("test.bytecode.BC_l2d");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0 != test.bytecode.BC_l2d.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0 != test.bytecode.BC_l2d.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-74652389) == -7.4652389E7
            runString = "test(-74652389)";
            if (-7.4652389E7 != test.bytecode.BC_l2d.test(-74652389L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_l2f() {
        JavaTesterRunScheme.begin("test.bytecode.BC_l2f");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0f != test.bytecode.BC_l2f.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0f != test.bytecode.BC_l2f.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-74652389) == -7.4652392E7
            runString = "test(-74652389)";
            if (-7.4652392E7f != test.bytecode.BC_l2f.test(-74652389L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_l2i() {
        JavaTesterRunScheme.begin("test.bytecode.BC_l2i");
        String runString = null;
        try {
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_l2i.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_l2i.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_l2i.test(3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1 != test.bytecode.BC_l2i.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483647) == -2147483647
            runString = "test(-2147483647)";
            if (-2147483647 != test.bytecode.BC_l2i.test(-2147483647L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648) == -2147483648
            runString = "test(-2147483648)";
            if (-2147483648 != test.bytecode.BC_l2i.test(-2147483648L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == 2147483647
            runString = "test(2147483647)";
            if (2147483647 != test.bytecode.BC_l2i.test(2147483647L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ladd() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ladd");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3L != test.bytecode.BC_ladd.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1L != test.bytecode.BC_ladd.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 100
            runString = "test(33,67)";
            if (100L != test.bytecode.BC_ladd.test(33L, 67L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0L != test.bytecode.BC_ladd.test(1L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647L != test.bytecode.BC_ladd.test(-2147483648L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,1) == 2147483648
            runString = "test(2147483647,1)";
            if (2147483648L != test.bytecode.BC_ladd.test(2147483647L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ladd2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ladd2");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3L != test.bytecode.BC_ladd2.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1L != test.bytecode.BC_ladd2.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 100
            runString = "test(33,67)";
            if (100L != test.bytecode.BC_ladd2.test(33, 67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0L != test.bytecode.BC_ladd2.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647L != test.bytecode.BC_ladd2.test(-2147483648, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,1) == 2147483648
            runString = "test(2147483647,1)";
            if (2147483648L != test.bytecode.BC_ladd2.test(2147483647, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_laload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_laload");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.bytecode.BC_laload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if (-1L != test.bytecode.BC_laload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if (4L != test.bytecode.BC_laload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 1000000000000
            runString = "test(3)";
            if (1000000000000L != test.bytecode.BC_laload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_land() {
        JavaTesterRunScheme.begin("test.bytecode.BC_land");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0L != test.bytecode.BC_land.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0L != test.bytecode.BC_land.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 31
            runString = "test(31,63)";
            if (31L != test.bytecode.BC_land.test(31L, 63L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 4
            runString = "test(6,4)";
            if (4L != test.bytecode.BC_land.test(6L, 4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == 0
            runString = "test(-2147483648,1)";
            if (0L != test.bytecode.BC_land.test(-2147483648L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lastore");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0L != test.bytecode.BC_lastore.test(0, 0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if (-1L != test.bytecode.BC_lastore.test(1, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,11) == 11
            runString = "test(2,11)";
            if (11L != test.bytecode.BC_lastore.test(2, 11L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-14) == -14
            runString = "test(3,-14)";
            if (-14L != test.bytecode.BC_lastore.test(3, -14L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lcmp() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lcmp");
        String runString = null;
        try {
        // test(0,-1) == false
            runString = "test(0,-1)";
            if (false != test.bytecode.BC_lcmp.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(77,78) == true
            runString = "test(77,78)";
            if (true != test.bytecode.BC_lcmp.test(77L, 78L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1,0) == true
            runString = "test(-1,0)";
            if (true != test.bytecode.BC_lcmp.test(-1L, 0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldc_01() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldc_01");
        String runString = null;
        try {
        // test(0) == -123
            runString = "test(0)";
            if (-123 != test.bytecode.BC_ldc_01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldc_02() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldc_02");
        String runString = null;
        try {
        // test(0) == -2.4
            runString = "test(0)";
            if (-2.4f != test.bytecode.BC_ldc_02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldc_03() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldc_03");
        String runString = null;
        try {
        // test(0) == -123
            runString = "test(0)";
            if (-123L != test.bytecode.BC_ldc_03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldc_04() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldc_04");
        String runString = null;
        try {
        // test(0) == xyz
            runString = "test(0)";
            if (!"xyz".equals(test.bytecode.BC_ldc_04.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldc_05() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldc_05");
        String runString = null;
        try {
        // test(0) == -2.33
            runString = "test(0)";
            if (-2.33 != test.bytecode.BC_ldc_05.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_ldiv() {
        JavaTesterRunScheme.begin("test.bytecode.BC_ldiv");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0L != test.bytecode.BC_ldiv.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1) == -2
            runString = "test(2,-1)";
            if (-2L != test.bytecode.BC_ldiv.test(2L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256,4) == 64
            runString = "test(256,4)";
            if (64L != test.bytecode.BC_ldiv.test(256L, 4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(135,7) == 19
            runString = "test(135,7)";
            if (19L != test.bytecode.BC_ldiv.test(135L, 7L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lload_0() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lload_0");
        String runString = null;
        try {
        // test(1) == 1
            runString = "test(1)";
            if (1L != test.bytecode.BC_lload_0.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-3) == -3
            runString = "test(-3)";
            if (-3L != test.bytecode.BC_lload_0.test(-3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(10000) == 10000
            runString = "test(10000)";
            if (10000L != test.bytecode.BC_lload_0.test(10000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lload_01() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lload_01");
        String runString = null;
        try {
        // test(1) == 0
            runString = "test(1)";
            if (0L != test.bytecode.BC_lload_01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-3) == 0
            runString = "test(-3)";
            if (0L != test.bytecode.BC_lload_01.test(-3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(100) == 0
            runString = "test(100)";
            if (0L != test.bytecode.BC_lload_01.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lload_1() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lload_1");
        String runString = null;
        try {
        // test(1,1) == 1
            runString = "test(1,1)";
            if (1L != test.bytecode.BC_lload_1.test(1, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-3) == -3
            runString = "test(1,-3)";
            if (-3L != test.bytecode.BC_lload_1.test(1, -3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,10000) == 10000
            runString = "test(1,10000)";
            if (10000L != test.bytecode.BC_lload_1.test(1, 10000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lload_2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lload_2");
        String runString = null;
        try {
        // test(1,1,1) == 1
            runString = "test(1,1,1)";
            if (1L != test.bytecode.BC_lload_2.test(1, 1, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,-3) == -3
            runString = "test(1,1,-3)";
            if (-3L != test.bytecode.BC_lload_2.test(1, 1, -3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,10000) == 10000
            runString = "test(1,1,10000)";
            if (10000L != test.bytecode.BC_lload_2.test(1, 1, 10000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lload_3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lload_3");
        String runString = null;
        try {
        // test(1,1,1,1) == 1
            runString = "test(1,1,1,1)";
            if (1L != test.bytecode.BC_lload_3.test(1, 1, 1, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,-3) == -3
            runString = "test(1,1,1,-3)";
            if (-3L != test.bytecode.BC_lload_3.test(1, 1, 1, -3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,1,10000) == 10000
            runString = "test(1,1,1,10000)";
            if (10000L != test.bytecode.BC_lload_3.test(1, 1, 1, 10000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lmul() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lmul");
        String runString = null;
        try {
        // test(1,2) == 2
            runString = "test(1,2)";
            if (2L != test.bytecode.BC_lmul.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0L != test.bytecode.BC_lmul.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,67) == 2211
            runString = "test(33,67)";
            if (2211L != test.bytecode.BC_lmul.test(33L, 67L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if (-1L != test.bytecode.BC_lmul.test(1L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483648
            runString = "test(-2147483648,1)";
            if (-2147483648L != test.bytecode.BC_lmul.test(-2147483648L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,-1) == -2147483647
            runString = "test(2147483647,-1)";
            if (-2147483647L != test.bytecode.BC_lmul.test(2147483647L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,-1) == 2147483648
            runString = "test(-2147483648,-1)";
            if (2147483648L != test.bytecode.BC_lmul.test(-2147483648L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000000,1000000) == 1000000000000
            runString = "test(1000000,1000000)";
            if (1000000000000L != test.bytecode.BC_lmul.test(1000000L, 1000000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lneg() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lneg");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.bytecode.BC_lneg.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 1
            runString = "test(-1)";
            if (1L != test.bytecode.BC_lneg.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7263) == -7263
            runString = "test(7263)";
            if (-7263L != test.bytecode.BC_lneg.test(7263L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648) == 2147483648
            runString = "test(-2147483648)";
            if (2147483648L != test.bytecode.BC_lneg.test(-2147483648L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lookupswitch01() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lookupswitch01");
        String runString = null;
        try {
        // test(0) == 42
            runString = "test(0)";
            if (42 != test.bytecode.BC_lookupswitch01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 42
            runString = "test(1)";
            if (42 != test.bytecode.BC_lookupswitch01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(66) == 42
            runString = "test(66)";
            if (42 != test.bytecode.BC_lookupswitch01.test(66)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67) == 0
            runString = "test(67)";
            if (0 != test.bytecode.BC_lookupswitch01.test(67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(68) == 42
            runString = "test(68)";
            if (42 != test.bytecode.BC_lookupswitch01.test(68)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(96) == 42
            runString = "test(96)";
            if (42 != test.bytecode.BC_lookupswitch01.test(96)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(97) == 1
            runString = "test(97)";
            if (1 != test.bytecode.BC_lookupswitch01.test(97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(98) == 42
            runString = "test(98)";
            if (42 != test.bytecode.BC_lookupswitch01.test(98)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(106) == 42
            runString = "test(106)";
            if (42 != test.bytecode.BC_lookupswitch01.test(106)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(107) == 2
            runString = "test(107)";
            if (2 != test.bytecode.BC_lookupswitch01.test(107)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(108) == 42
            runString = "test(108)";
            if (42 != test.bytecode.BC_lookupswitch01.test(108)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(132) == 42
            runString = "test(132)";
            if (42 != test.bytecode.BC_lookupswitch01.test(132)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(133) == 3
            runString = "test(133)";
            if (3 != test.bytecode.BC_lookupswitch01.test(133)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(134) == 42
            runString = "test(134)";
            if (42 != test.bytecode.BC_lookupswitch01.test(134)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(211) == 42
            runString = "test(211)";
            if (42 != test.bytecode.BC_lookupswitch01.test(211)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(212) == 4
            runString = "test(212)";
            if (4 != test.bytecode.BC_lookupswitch01.test(212)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(213) == 42
            runString = "test(213)";
            if (42 != test.bytecode.BC_lookupswitch01.test(213)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lookupswitch02() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lookupswitch02");
        String runString = null;
        try {
        // test(0) == 42
            runString = "test(0)";
            if (42 != test.bytecode.BC_lookupswitch02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 42
            runString = "test(1)";
            if (42 != test.bytecode.BC_lookupswitch02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(66) == 42
            runString = "test(66)";
            if (42 != test.bytecode.BC_lookupswitch02.test(66)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67) == 0
            runString = "test(67)";
            if (0 != test.bytecode.BC_lookupswitch02.test(67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(68) == 42
            runString = "test(68)";
            if (42 != test.bytecode.BC_lookupswitch02.test(68)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(96) == 42
            runString = "test(96)";
            if (42 != test.bytecode.BC_lookupswitch02.test(96)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(97) == 1
            runString = "test(97)";
            if (1 != test.bytecode.BC_lookupswitch02.test(97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(98) == 42
            runString = "test(98)";
            if (42 != test.bytecode.BC_lookupswitch02.test(98)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(106) == 42
            runString = "test(106)";
            if (42 != test.bytecode.BC_lookupswitch02.test(106)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(107) == 2
            runString = "test(107)";
            if (2 != test.bytecode.BC_lookupswitch02.test(107)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(108) == 42
            runString = "test(108)";
            if (42 != test.bytecode.BC_lookupswitch02.test(108)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(132) == 42
            runString = "test(132)";
            if (42 != test.bytecode.BC_lookupswitch02.test(132)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(133) == 3
            runString = "test(133)";
            if (3 != test.bytecode.BC_lookupswitch02.test(133)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(134) == 42
            runString = "test(134)";
            if (42 != test.bytecode.BC_lookupswitch02.test(134)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(211) == 42
            runString = "test(211)";
            if (42 != test.bytecode.BC_lookupswitch02.test(211)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(212) == 4
            runString = "test(212)";
            if (4 != test.bytecode.BC_lookupswitch02.test(212)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(213) == 42
            runString = "test(213)";
            if (42 != test.bytecode.BC_lookupswitch02.test(213)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-121) == 42
            runString = "test(-121)";
            if (42 != test.bytecode.BC_lookupswitch02.test(-121)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-122) == 5
            runString = "test(-122)";
            if (5 != test.bytecode.BC_lookupswitch02.test(-122)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-123) == 42
            runString = "test(-123)";
            if (42 != test.bytecode.BC_lookupswitch02.test(-123)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lookupswitch03() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lookupswitch03");
        String runString = null;
        try {
        // test(0) == 42
            runString = "test(0)";
            if (42 != test.bytecode.BC_lookupswitch03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 42
            runString = "test(1)";
            if (42 != test.bytecode.BC_lookupswitch03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(66) == 42
            runString = "test(66)";
            if (42 != test.bytecode.BC_lookupswitch03.test(66)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67) == 0
            runString = "test(67)";
            if (0 != test.bytecode.BC_lookupswitch03.test(67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(68) == 42
            runString = "test(68)";
            if (42 != test.bytecode.BC_lookupswitch03.test(68)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(96) == 42
            runString = "test(96)";
            if (42 != test.bytecode.BC_lookupswitch03.test(96)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(97) == 1
            runString = "test(97)";
            if (1 != test.bytecode.BC_lookupswitch03.test(97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(98) == 42
            runString = "test(98)";
            if (42 != test.bytecode.BC_lookupswitch03.test(98)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(106) == 42
            runString = "test(106)";
            if (42 != test.bytecode.BC_lookupswitch03.test(106)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(107) == 2
            runString = "test(107)";
            if (2 != test.bytecode.BC_lookupswitch03.test(107)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(108) == 42
            runString = "test(108)";
            if (42 != test.bytecode.BC_lookupswitch03.test(108)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(132) == 42
            runString = "test(132)";
            if (42 != test.bytecode.BC_lookupswitch03.test(132)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(133) == 3
            runString = "test(133)";
            if (3 != test.bytecode.BC_lookupswitch03.test(133)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(134) == 42
            runString = "test(134)";
            if (42 != test.bytecode.BC_lookupswitch03.test(134)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(211) == 42
            runString = "test(211)";
            if (42 != test.bytecode.BC_lookupswitch03.test(211)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(212) == 4
            runString = "test(212)";
            if (4 != test.bytecode.BC_lookupswitch03.test(212)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(213) == 42
            runString = "test(213)";
            if (42 != test.bytecode.BC_lookupswitch03.test(213)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-121) == 42
            runString = "test(-121)";
            if (42 != test.bytecode.BC_lookupswitch03.test(-121)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-122) == 5
            runString = "test(-122)";
            if (5 != test.bytecode.BC_lookupswitch03.test(-122)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-123) == 42
            runString = "test(-123)";
            if (42 != test.bytecode.BC_lookupswitch03.test(-123)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lookupswitch04() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lookupswitch04");
        String runString = null;
        try {
        // test(0) == 42
            runString = "test(0)";
            if (42 != test.bytecode.BC_lookupswitch04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 42
            runString = "test(1)";
            if (42 != test.bytecode.BC_lookupswitch04.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(66) == 42
            runString = "test(66)";
            if (42 != test.bytecode.BC_lookupswitch04.test(66)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67) == 0
            runString = "test(67)";
            if (0 != test.bytecode.BC_lookupswitch04.test(67)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(68) == 42
            runString = "test(68)";
            if (42 != test.bytecode.BC_lookupswitch04.test(68)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(96) == 42
            runString = "test(96)";
            if (42 != test.bytecode.BC_lookupswitch04.test(96)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(97) == 1
            runString = "test(97)";
            if (1 != test.bytecode.BC_lookupswitch04.test(97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(98) == 42
            runString = "test(98)";
            if (42 != test.bytecode.BC_lookupswitch04.test(98)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(106) == 42
            runString = "test(106)";
            if (42 != test.bytecode.BC_lookupswitch04.test(106)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(107) == 2
            runString = "test(107)";
            if (2 != test.bytecode.BC_lookupswitch04.test(107)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(108) == 42
            runString = "test(108)";
            if (42 != test.bytecode.BC_lookupswitch04.test(108)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(132) == 42
            runString = "test(132)";
            if (42 != test.bytecode.BC_lookupswitch04.test(132)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(133) == 3
            runString = "test(133)";
            if (3 != test.bytecode.BC_lookupswitch04.test(133)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(134) == 42
            runString = "test(134)";
            if (42 != test.bytecode.BC_lookupswitch04.test(134)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(211) == 42
            runString = "test(211)";
            if (42 != test.bytecode.BC_lookupswitch04.test(211)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(212) == 4
            runString = "test(212)";
            if (4 != test.bytecode.BC_lookupswitch04.test(212)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(213) == 42
            runString = "test(213)";
            if (42 != test.bytecode.BC_lookupswitch04.test(213)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-121) == 42
            runString = "test(-121)";
            if (42 != test.bytecode.BC_lookupswitch04.test(-121)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-122) == 5
            runString = "test(-122)";
            if (5 != test.bytecode.BC_lookupswitch04.test(-122)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-123) == 42
            runString = "test(-123)";
            if (42 != test.bytecode.BC_lookupswitch04.test(-123)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lor() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lor");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3L != test.bytecode.BC_lor.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1L != test.bytecode.BC_lor.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 63
            runString = "test(31,63)";
            if (63L != test.bytecode.BC_lor.test(31L, 63L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 6
            runString = "test(6,4)";
            if (6L != test.bytecode.BC_lor.test(6L, 4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647L != test.bytecode.BC_lor.test(-2147483648L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lrem() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lrem");
        String runString = null;
        try {
        // test(1,2) == 1
            runString = "test(1,2)";
            if (1L != test.bytecode.BC_lrem.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1) == 0
            runString = "test(2,-1)";
            if (0L != test.bytecode.BC_lrem.test(2L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256,4) == 0
            runString = "test(256,4)";
            if (0L != test.bytecode.BC_lrem.test(256L, 4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(135,7) == 2
            runString = "test(135,7)";
            if (2L != test.bytecode.BC_lrem.test(135L, 7L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lreturn() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lreturn");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.bytecode.BC_lreturn.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1L != test.bytecode.BC_lreturn.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -1
            runString = "test(-1)";
            if (-1L != test.bytecode.BC_lreturn.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(256) == 256
            runString = "test(256)";
            if (256L != test.bytecode.BC_lreturn.test(256L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000000000000) == 1000000000000
            runString = "test(1000000000000)";
            if (1000000000000L != test.bytecode.BC_lreturn.test(1000000000000L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lshl() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lshl");
        String runString = null;
        try {
        // test(1,2) == 4
            runString = "test(1,2)";
            if (4L != test.bytecode.BC_lshl.test(1L, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0L != test.bytecode.BC_lshl.test(0L, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 62
            runString = "test(31,1)";
            if (62L != test.bytecode.BC_lshl.test(31L, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 96
            runString = "test(6,4)";
            if (96L != test.bytecode.BC_lshl.test(6L, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -4294967296
            runString = "test(-2147483648,1)";
            if (-4294967296L != test.bytecode.BC_lshl.test(-2147483648L, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lshr() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lshr");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0L != test.bytecode.BC_lshr.test(1L, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67,2) == 16
            runString = "test(67,2)";
            if (16L != test.bytecode.BC_lshr.test(67L, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 15
            runString = "test(31,1)";
            if (15L != test.bytecode.BC_lshr.test(31L, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 0
            runString = "test(6,4)";
            if (0L != test.bytecode.BC_lshr.test(6L, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,16) == -32768
            runString = "test(-2147483648,16)";
            if (-32768L != test.bytecode.BC_lshr.test(-2147483648L, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lsub() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lsub");
        String runString = null;
        try {
        // test(1,-2) == 3
            runString = "test(1,-2)";
            if (3L != test.bytecode.BC_lsub.test(1L, -2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,1) == -1
            runString = "test(0,1)";
            if (-1L != test.bytecode.BC_lsub.test(0L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(33,-67) == 100
            runString = "test(33,-67)";
            if (100L != test.bytecode.BC_lsub.test(33L, -67L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1) == 0
            runString = "test(1,1)";
            if (0L != test.bytecode.BC_lsub.test(1L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,-1) == -2147483647
            runString = "test(-2147483648,-1)";
            if (-2147483647L != test.bytecode.BC_lsub.test(-2147483648L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647,-1) == 2147483648
            runString = "test(2147483647,-1)";
            if (2147483648L != test.bytecode.BC_lsub.test(2147483647L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lushr() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lushr");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0L != test.bytecode.BC_lushr.test(1L, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(67,2) == 16
            runString = "test(67,2)";
            if (16L != test.bytecode.BC_lushr.test(67L, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,1) == 15
            runString = "test(31,1)";
            if (15L != test.bytecode.BC_lushr.test(31L, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 0
            runString = "test(6,4)";
            if (0L != test.bytecode.BC_lushr.test(6L, 4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,16) == 281474976677888
            runString = "test(-2147483648,16)";
            if (281474976677888L != test.bytecode.BC_lushr.test(-2147483648L, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_lxor() {
        JavaTesterRunScheme.begin("test.bytecode.BC_lxor");
        String runString = null;
        try {
        // test(1,2) == 3
            runString = "test(1,2)";
            if (3L != test.bytecode.BC_lxor.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -1
            runString = "test(0,-1)";
            if (-1L != test.bytecode.BC_lxor.test(0L, -1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(31,63) == 32
            runString = "test(31,63)";
            if (32L != test.bytecode.BC_lxor.test(31L, 63L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,4) == 2
            runString = "test(6,4)";
            if (2L != test.bytecode.BC_lxor.test(6L, 4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2147483648,1) == -2147483647
            runString = "test(-2147483648,1)";
            if (-2147483647L != test.bytecode.BC_lxor.test(-2147483648L, 1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_monitorenter() {
        JavaTesterRunScheme.begin("test.bytecode.BC_monitorenter");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_monitorenter.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_monitorenter.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -2
            runString = "test(-2)";
            if (-2 != test.bytecode.BC_monitorenter.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_multianewarray() {
        JavaTesterRunScheme.begin("test.bytecode.BC_multianewarray");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_multianewarray.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_multianewarray.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_new() {
        JavaTesterRunScheme.begin("test.bytecode.BC_new");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_new.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_newarray() {
        JavaTesterRunScheme.begin("test.bytecode.BC_newarray");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_newarray.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_newarray.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_putfield() {
        JavaTesterRunScheme.begin("test.bytecode.BC_putfield");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_putfield.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_putfield.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_putfield.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_putfield.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_putstatic() {
        JavaTesterRunScheme.begin("test.bytecode.BC_putstatic");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.bytecode.BC_putstatic.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.bytecode.BC_putstatic.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.bytecode.BC_putstatic.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.bytecode.BC_putstatic.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.bytecode.BC_putstatic.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_saload() {
        JavaTesterRunScheme.begin("test.bytecode.BC_saload");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if ((short) 0 != test.bytecode.BC_saload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if ((short) -1 != test.bytecode.BC_saload.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if ((short) 4 != test.bytecode.BC_saload.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 10000
            runString = "test(3)";
            if ((short) 10000 != test.bytecode.BC_saload.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_sastore() {
        JavaTesterRunScheme.begin("test.bytecode.BC_sastore");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if ((short) 0 != test.bytecode.BC_sastore.test(0, (short) 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -1
            runString = "test(1,-1)";
            if ((short) -1 != test.bytecode.BC_sastore.test(1, (short) -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,11) == 11
            runString = "test(2,11)";
            if ((short) 11 != test.bytecode.BC_sastore.test(2, (short) 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-14) == -14
            runString = "test(3,-14)";
            if ((short) -14 != test.bytecode.BC_sastore.test(3, (short) -14)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_tableswitch() {
        JavaTesterRunScheme.begin("test.bytecode.BC_tableswitch");
        String runString = null;
        try {
        // test(-1) == 42
            runString = "test(-1)";
            if (42 != test.bytecode.BC_tableswitch.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == 10
            runString = "test(0)";
            if (10 != test.bytecode.BC_tableswitch.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 20
            runString = "test(1)";
            if (20 != test.bytecode.BC_tableswitch.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 30
            runString = "test(2)";
            if (30 != test.bytecode.BC_tableswitch.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 42
            runString = "test(3)";
            if (42 != test.bytecode.BC_tableswitch.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 40
            runString = "test(4)";
            if (40 != test.bytecode.BC_tableswitch.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 50
            runString = "test(5)";
            if (50 != test.bytecode.BC_tableswitch.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 42
            runString = "test(6)";
            if (42 != test.bytecode.BC_tableswitch.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_tableswitch2() {
        JavaTesterRunScheme.begin("test.bytecode.BC_tableswitch2");
        String runString = null;
        try {
        // test(-1) == 11
            runString = "test(-1)";
            if (11 != test.bytecode.BC_tableswitch2.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_tableswitch2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11 != test.bytecode.BC_tableswitch2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 55
            runString = "test(5)";
            if (55 != test.bytecode.BC_tableswitch2.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 66
            runString = "test(6)";
            if (66 != test.bytecode.BC_tableswitch2.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == 77
            runString = "test(7)";
            if (77 != test.bytecode.BC_tableswitch2.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == 11
            runString = "test(8)";
            if (11 != test.bytecode.BC_tableswitch2.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_tableswitch3() {
        JavaTesterRunScheme.begin("test.bytecode.BC_tableswitch3");
        String runString = null;
        try {
        // test(-1) == 11
            runString = "test(-1)";
            if (11 != test.bytecode.BC_tableswitch3.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == 22
            runString = "test(-2)";
            if (22 != test.bytecode.BC_tableswitch3.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-3) == 99
            runString = "test(-3)";
            if (99 != test.bytecode.BC_tableswitch3.test(-3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == 99
            runString = "test(-4)";
            if (99 != test.bytecode.BC_tableswitch3.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 77
            runString = "test(1)";
            if (77 != test.bytecode.BC_tableswitch3.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 99
            runString = "test(2)";
            if (99 != test.bytecode.BC_tableswitch3.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(10) == 99
            runString = "test(10)";
            if (99 != test.bytecode.BC_tableswitch3.test(10)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_tableswitch4() {
        JavaTesterRunScheme.begin("test.bytecode.BC_tableswitch4");
        String runString = null;
        try {
        // test(-1) == 11
            runString = "test(-1)";
            if (11 != test.bytecode.BC_tableswitch4.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_tableswitch4.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11 != test.bytecode.BC_tableswitch4.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == 55
            runString = "test(-5)";
            if (55 != test.bytecode.BC_tableswitch4.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == 44
            runString = "test(-4)";
            if (44 != test.bytecode.BC_tableswitch4.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-3) == 33
            runString = "test(-3)";
            if (33 != test.bytecode.BC_tableswitch4.test(-3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-8) == 11
            runString = "test(-8)";
            if (11 != test.bytecode.BC_tableswitch4.test(-8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_wide01() {
        JavaTesterRunScheme.begin("test.bytecode.BC_wide01");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_wide01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 12
            runString = "test(1)";
            if (12 != test.bytecode.BC_wide01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_bytecode_BC_wide02() {
        JavaTesterRunScheme.begin("test.bytecode.BC_wide02");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_wide02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 12
            runString = "test(1)";
            if (12 != test.bytecode.BC_wide02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_aaload() {
        JavaTesterRunScheme.begin("test.except.BC_aaload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_aaload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_aaload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == null
            runString = "test(0)";
            if (null != test.except.BC_aaload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_aastore() {
        JavaTesterRunScheme.begin("test.except.BC_aastore");
        String runString = null;
        try {
        // test(true,-2) == !java.lang.NullPointerException
            try {
                runString = "test(true,-2)";
                test.except.BC_aastore.test(true, -2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(true,-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(true,-1)";
                test.except.BC_aastore.test(true, -1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(true,0) == 0
            runString = "test(true,0)";
            if (0 != test.except.BC_aastore.test(true, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(true,1) == 1
            runString = "test(true,1)";
            if (1 != test.except.BC_aastore.test(true, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(true,2) == 2
            runString = "test(true,2)";
            if (2 != test.except.BC_aastore.test(true, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(true,3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(true,3)";
                test.except.BC_aastore.test(true, 3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(false,0) == !java.lang.ArrayStoreException
            try {
                runString = "test(false,0)";
                test.except.BC_aastore.test(false, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayStoreException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(false,1) == 1
            runString = "test(false,1)";
            if (1 != test.except.BC_aastore.test(false, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(false,2) == 2
            runString = "test(false,2)";
            if (2 != test.except.BC_aastore.test(false, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(false,3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(false,3)";
                test.except.BC_aastore.test(false, 3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_anewarray() {
        JavaTesterRunScheme.begin("test.except.BC_anewarray");
        String runString = null;
        try {
        // test(-1) == !java.lang.NegativeArraySizeException
            try {
                runString = "test(-1)";
                test.except.BC_anewarray.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NegativeArraySizeException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.BC_anewarray.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_arraylength() {
        JavaTesterRunScheme.begin("test.except.BC_arraylength");
        String runString = null;
        try {
        // test(0) == !java.lang.NullPointerException
            try {
                runString = "test(0)";
                test.except.BC_arraylength.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == 3
            runString = "test(1)";
            if (3 != test.except.BC_arraylength.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 4
            runString = "test(2)";
            if (4 != test.except.BC_arraylength.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 5
            runString = "test(3)";
            if (5 != test.except.BC_arraylength.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 42
            runString = "test(4)";
            if (42 != test.except.BC_arraylength.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_athrow() {
        JavaTesterRunScheme.begin("test.except.BC_athrow");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_athrow.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.Throwable
            try {
                runString = "test(2)";
                test.except.BC_athrow.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Throwable.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_athrow1() {
        JavaTesterRunScheme.begin("test.except.BC_athrow1");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_athrow1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.BC_athrow1.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.Throwable
            try {
                runString = "test(2)";
                test.except.BC_athrow1.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Throwable.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.except.BC_athrow1.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_athrow2() {
        JavaTesterRunScheme.begin("test.except.BC_athrow2");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_athrow2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.Throwable
            try {
                runString = "test(2)";
                test.except.BC_athrow2.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Throwable.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.except.BC_athrow2.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_athrow3() {
        JavaTesterRunScheme.begin("test.except.BC_athrow3");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_athrow3.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.Throwable
            try {
                runString = "test(2)";
                test.except.BC_athrow3.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Throwable.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.except.BC_athrow3.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_baload() {
        JavaTesterRunScheme.begin("test.except.BC_baload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_baload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_baload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.BC_baload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_baload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_bastore() {
        JavaTesterRunScheme.begin("test.except.BC_bastore");
        String runString = null;
        try {
        // test(-2,true) == !java.lang.NullPointerException
            try {
                runString = "test(-2,true)";
                test.except.BC_bastore.test(-2, true);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,false) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,false)";
                test.except.BC_bastore.test(-1, false);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,true) == true
            runString = "test(0,true)";
            if (true != test.except.BC_bastore.test(0, true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,true) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,true)";
                test.except.BC_bastore.test(4, true);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_caload() {
        JavaTesterRunScheme.begin("test.except.BC_caload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_caload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_caload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == '\0'
            runString = "test(0)";
            if ((char) 0 != test.except.BC_caload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_caload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_castore() {
        JavaTesterRunScheme.begin("test.except.BC_castore");
        String runString = null;
        try {
        // test(-2,'a') == !java.lang.NullPointerException
            try {
                runString = "test(-2,'a')";
                test.except.BC_castore.test(-2, (char) 97);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,'c') == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,'c')";
                test.except.BC_castore.test(-1, (char) 99);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,'a') == 'a'
            runString = "test(0,'a')";
            if ((char) 97 != test.except.BC_castore.test(0, (char) 97)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,'a') == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,'a')";
                test.except.BC_castore.test(4, (char) 97);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_checkcast() {
        JavaTesterRunScheme.begin("test.except.BC_checkcast");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_checkcast.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassCastException
            try {
                runString = "test(2)";
                test.except.BC_checkcast.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.ClassCastException
            try {
                runString = "test(3)";
                test.except.BC_checkcast.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.except.BC_checkcast.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_checkcast1() {
        JavaTesterRunScheme.begin("test.except.BC_checkcast1");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_checkcast1.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassCastException
            try {
                runString = "test(2)";
                test.except.BC_checkcast1.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.ClassCastException
            try {
                runString = "test(3)";
                test.except.BC_checkcast1.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.except.BC_checkcast1.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_checkcast2() {
        JavaTesterRunScheme.begin("test.except.BC_checkcast2");
        String runString = null;
        try {
        // test(0) == -1
            runString = "test(0)";
            if (-1 != test.except.BC_checkcast2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if (-1 != test.except.BC_checkcast2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassCastException
            try {
                runString = "test(2)";
                test.except.BC_checkcast2.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.ClassCastException
            try {
                runString = "test(3)";
                test.except.BC_checkcast2.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.except.BC_checkcast2.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_daload() {
        JavaTesterRunScheme.begin("test.except.BC_daload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_daload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_daload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0 != test.except.BC_daload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_daload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_dastore() {
        JavaTesterRunScheme.begin("test.except.BC_dastore");
        String runString = null;
        try {
        // test(-2,0.01) == !java.lang.NullPointerException
            try {
                runString = "test(-2,0.01)";
                test.except.BC_dastore.test(-2, 0.01);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,-1.4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,-1.4)";
                test.except.BC_dastore.test(-1, -1.4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,0.01) == 0.01
            runString = "test(0,0.01)";
            if (0.01 != test.except.BC_dastore.test(0, 0.01)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,0.01) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,0.01)";
                test.except.BC_dastore.test(4, 0.01);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_faload() {
        JavaTesterRunScheme.begin("test.except.BC_faload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_faload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_faload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0f != test.except.BC_faload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_faload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_fastore() {
        JavaTesterRunScheme.begin("test.except.BC_fastore");
        String runString = null;
        try {
        // test(-2,0.01) == !java.lang.NullPointerException
            try {
                runString = "test(-2,0.01)";
                test.except.BC_fastore.test(-2, 0.01f);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,-1.4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,-1.4)";
                test.except.BC_fastore.test(-1, -1.4f);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,0.01) == 0.01
            runString = "test(0,0.01)";
            if (0.01f != test.except.BC_fastore.test(0, 0.01f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,0.01) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,0.01)";
                test.except.BC_fastore.test(4, 0.01f);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_getfield() {
        JavaTesterRunScheme.begin("test.except.BC_getfield");
        String runString = null;
        try {
        // test(0) == 13
            runString = "test(0)";
            if (13 != test.except.BC_getfield.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.except.BC_getfield.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_iaload() {
        JavaTesterRunScheme.begin("test.except.BC_iaload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_iaload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_iaload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_iaload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_iaload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_iastore() {
        JavaTesterRunScheme.begin("test.except.BC_iastore");
        String runString = null;
        try {
        // test(-2,0) == !java.lang.NullPointerException
            try {
                runString = "test(-2,0)";
                test.except.BC_iastore.test(-2, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,3)";
                test.except.BC_iastore.test(-1, 3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0 != test.except.BC_iastore.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,0)";
                test.except.BC_iastore.test(4, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_idiv() {
        JavaTesterRunScheme.begin("test.except.BC_idiv");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0 != test.except.BC_idiv.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(11,0) == !java.lang.ArithmeticException
            try {
                runString = "test(11,0)";
                test.except.BC_idiv.test(11, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArithmeticException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_invokevirtual01() {
        JavaTesterRunScheme.begin("test.except.BC_invokevirtual01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.BC_invokevirtual01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.NullPointerException
            try {
                runString = "test(1)";
                test.except.BC_invokevirtual01.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_irem() {
        JavaTesterRunScheme.begin("test.except.BC_irem");
        String runString = null;
        try {
        // test(1,2) == 1
            runString = "test(1,2)";
            if (1 != test.except.BC_irem.test(1, 2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(11,0) == !java.lang.ArithmeticException
            try {
                runString = "test(11,0)";
                test.except.BC_irem.test(11, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArithmeticException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_laload() {
        JavaTesterRunScheme.begin("test.except.BC_laload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_laload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_laload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.except.BC_laload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_laload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_lastore() {
        JavaTesterRunScheme.begin("test.except.BC_lastore");
        String runString = null;
        try {
        // test(-2,0) == !java.lang.NullPointerException
            try {
                runString = "test(-2,0)";
                test.except.BC_lastore.test(-2, 0L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,3)";
                test.except.BC_lastore.test(-1, 3L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0L != test.except.BC_lastore.test(0, 0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,0)";
                test.except.BC_lastore.test(4, 0L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_ldiv() {
        JavaTesterRunScheme.begin("test.except.BC_ldiv");
        String runString = null;
        try {
        // test(1,2) == 0
            runString = "test(1,2)";
            if (0L != test.except.BC_ldiv.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(11,0) == !java.lang.ArithmeticException
            try {
                runString = "test(11,0)";
                test.except.BC_ldiv.test(11L, 0L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArithmeticException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_lrem() {
        JavaTesterRunScheme.begin("test.except.BC_lrem");
        String runString = null;
        try {
        // test(1,2) == 1
            runString = "test(1,2)";
            if (1L != test.except.BC_lrem.test(1L, 2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(11,0) == !java.lang.ArithmeticException
            try {
                runString = "test(11,0)";
                test.except.BC_lrem.test(11L, 0L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArithmeticException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_monitorenter() {
        JavaTesterRunScheme.begin("test.except.BC_monitorenter");
        String runString = null;
        try {
        // test(true) == true
            runString = "test(true)";
            if (true != test.except.BC_monitorenter.test(true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(false) == !java.lang.NullPointerException
            try {
                runString = "test(false)";
                test.except.BC_monitorenter.test(false);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_multianewarray() {
        JavaTesterRunScheme.begin("test.except.BC_multianewarray");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0 != test.except.BC_multianewarray.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1) == 1
            runString = "test(1,1)";
            if (1 != test.except.BC_multianewarray.test(1, 1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1,0) == !java.lang.NegativeArraySizeException
            try {
                runString = "test(-1,0)";
                test.except.BC_multianewarray.test(-1, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NegativeArraySizeException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,-1) == !java.lang.NegativeArraySizeException
            try {
                runString = "test(0,-1)";
                test.except.BC_multianewarray.test(0, -1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NegativeArraySizeException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_newarray() {
        JavaTesterRunScheme.begin("test.except.BC_newarray");
        String runString = null;
        try {
        // test(-1) == !java.lang.NegativeArraySizeException
            try {
                runString = "test(-1)";
                test.except.BC_newarray.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NegativeArraySizeException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_newarray.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.BC_newarray.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_putfield() {
        JavaTesterRunScheme.begin("test.except.BC_putfield");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.BC_putfield.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.except.BC_putfield.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.except.BC_putfield.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_saload() {
        JavaTesterRunScheme.begin("test.except.BC_saload");
        String runString = null;
        try {
        // test(-2) == !java.lang.NullPointerException
            try {
                runString = "test(-2)";
                test.except.BC_saload.test(-2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1)";
                test.except.BC_saload.test(-1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0
            runString = "test(0)";
            if ((short) 0 != test.except.BC_saload.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.except.BC_saload.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_BC_sastore() {
        JavaTesterRunScheme.begin("test.except.BC_sastore");
        String runString = null;
        try {
        // test(-2,0) == !java.lang.NullPointerException
            try {
                runString = "test(-2,0)";
                test.except.BC_sastore.test(-2, (short) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(-1,3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(-1,3)";
                test.except.BC_sastore.test(-1, (short) 3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0,0) == 0
            runString = "test(0,0)";
            if ((short) 0 != test.except.BC_sastore.test(0, (short) 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4,0)";
                test.except.BC_sastore.test(4, (short) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_01() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -1
            runString = "test(-2)";
            if (-1 != test.except.Catch_NPE_01.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_02() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_02");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -1
            runString = "test(-2)";
            if (-1 != test.except.Catch_NPE_02.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_03() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_03");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -1
            runString = "test(-2)";
            if (-1 != test.except.Catch_NPE_03.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_04() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_04");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_04.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -1
            runString = "test(-2)";
            if (-1 != test.except.Catch_NPE_04.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_05() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_05");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_05.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_05.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == -1
            runString = "test(-2)";
            if (-1 != test.except.Catch_NPE_05.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_06() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_06");
        String runString = null;
        try {
        // test("") == 0
            runString = "test(\"\")";
            if (0 != test.except.Catch_NPE_06.test("")) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(null) == -1
            runString = "test(null)";
            if (-1 != test.except.Catch_NPE_06.test(null)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_NPE_07() {
        JavaTesterRunScheme.begin("test.except.Catch_NPE_07");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.except.Catch_NPE_07.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.except.Catch_NPE_07.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_StackOverflowError_01() {
        JavaTesterRunScheme.begin("test.except.Catch_StackOverflowError_01");
        String runString = null;
        try {
        // test(0) == !java.lang.StackOverflowError
            try {
                runString = "test(0)";
                test.except.Catch_StackOverflowError_01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.StackOverflowError.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Catch_StackOverflowError_02() {
        JavaTesterRunScheme.begin("test.except.Catch_StackOverflowError_02");
        String runString = null;
        try {
        // test(0) == !java.lang.StackOverflowError
            try {
                runString = "test(0)";
                test.except.Catch_StackOverflowError_02.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.StackOverflowError.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_InCatch01() {
        JavaTesterRunScheme.begin("test.except.Throw_InCatch01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_InCatch01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_InCatch01.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_InCatch02() {
        JavaTesterRunScheme.begin("test.except.Throw_InCatch02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_InCatch02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_InCatch02.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_InCatch03() {
        JavaTesterRunScheme.begin("test.except.Throw_InCatch03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_InCatch03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_InCatch03.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_Synchronized01() {
        JavaTesterRunScheme.begin("test.except.Throw_Synchronized01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_Synchronized01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_Synchronized01.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_Synchronized02() {
        JavaTesterRunScheme.begin("test.except.Throw_Synchronized02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_Synchronized02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_Synchronized02.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_Synchronized03() {
        JavaTesterRunScheme.begin("test.except.Throw_Synchronized03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_Synchronized03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_Synchronized03.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_except_Throw_Synchronized04() {
        JavaTesterRunScheme.begin("test.except.Throw_Synchronized04");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.except.Throw_Synchronized04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.Exception
            try {
                runString = "test(1)";
                test.except.Throw_Synchronized04.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_idiv_16() {
        JavaTesterRunScheme.begin("test.optimize.BC_idiv_16");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0 != test.optimize.BC_idiv_16.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,16) == 1
            runString = "test(0,16)";
            if (1 != test.optimize.BC_idiv_16.test(0, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,17) == 1
            runString = "test(0,17)";
            if (1 != test.optimize.BC_idiv_16.test(0, 17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == 0
            runString = "test(0,-1)";
            if (0 != test.optimize.BC_idiv_16.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-16) == -1
            runString = "test(0,-16)";
            if (-1 != test.optimize.BC_idiv_16.test(0, -16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-17) == -1
            runString = "test(0,-17)";
            if (-1 != test.optimize.BC_idiv_16.test(0, -17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1024) == -64
            runString = "test(0,-1024)";
            if (-64 != test.optimize.BC_idiv_16.test(0, -1024)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,0) == 0
            runString = "test(1,0)";
            if (0 != test.optimize.BC_idiv_16.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,16) == 1
            runString = "test(1,16)";
            if (1 != test.optimize.BC_idiv_16.test(1, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,17) == 1
            runString = "test(1,17)";
            if (1 != test.optimize.BC_idiv_16.test(1, 17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == 0
            runString = "test(1,-1)";
            if (0 != test.optimize.BC_idiv_16.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-16) == -1
            runString = "test(1,-16)";
            if (-1 != test.optimize.BC_idiv_16.test(1, -16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-17) == -1
            runString = "test(1,-17)";
            if (-1 != test.optimize.BC_idiv_16.test(1, -17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1024) == -64
            runString = "test(1,-1024)";
            if (-64 != test.optimize.BC_idiv_16.test(1, -1024)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_idiv_4() {
        JavaTesterRunScheme.begin("test.optimize.BC_idiv_4");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.optimize.BC_idiv_4.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 1
            runString = "test(4)";
            if (1 != test.optimize.BC_idiv_4.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 1
            runString = "test(5)";
            if (1 != test.optimize.BC_idiv_4.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 0
            runString = "test(-1)";
            if (0 != test.optimize.BC_idiv_4.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -1
            runString = "test(-4)";
            if (-1 != test.optimize.BC_idiv_4.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == -1
            runString = "test(-5)";
            if (-1 != test.optimize.BC_idiv_4.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-256) == -64
            runString = "test(-256)";
            if (-64 != test.optimize.BC_idiv_4.test(-256)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_imul_16() {
        JavaTesterRunScheme.begin("test.optimize.BC_imul_16");
        String runString = null;
        try {
        // test(0,0) == 0
            runString = "test(0,0)";
            if (0 != test.optimize.BC_imul_16.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,16) == 256
            runString = "test(0,16)";
            if (256 != test.optimize.BC_imul_16.test(0, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,17) == 272
            runString = "test(0,17)";
            if (272 != test.optimize.BC_imul_16.test(0, 17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-1) == -16
            runString = "test(0,-1)";
            if (-16 != test.optimize.BC_imul_16.test(0, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-16) == -256
            runString = "test(0,-16)";
            if (-256 != test.optimize.BC_imul_16.test(0, -16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-17) == -272
            runString = "test(0,-17)";
            if (-272 != test.optimize.BC_imul_16.test(0, -17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,2147483647) == -16
            runString = "test(0,2147483647)";
            if (-16 != test.optimize.BC_imul_16.test(0, 2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,-2147483648) == 0
            runString = "test(0,-2147483648)";
            if (0 != test.optimize.BC_imul_16.test(0, -2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,0) == 0
            runString = "test(1,0)";
            if (0 != test.optimize.BC_imul_16.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,16) == 256
            runString = "test(1,16)";
            if (256 != test.optimize.BC_imul_16.test(1, 16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,17) == 272
            runString = "test(1,17)";
            if (272 != test.optimize.BC_imul_16.test(1, 17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1) == -16
            runString = "test(1,-1)";
            if (-16 != test.optimize.BC_imul_16.test(1, -1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-16) == -256
            runString = "test(1,-16)";
            if (-256 != test.optimize.BC_imul_16.test(1, -16)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-17) == -272
            runString = "test(1,-17)";
            if (-272 != test.optimize.BC_imul_16.test(1, -17)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,2147483647) == -16
            runString = "test(1,2147483647)";
            if (-16 != test.optimize.BC_imul_16.test(1, 2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-2147483648) == 0
            runString = "test(1,-2147483648)";
            if (0 != test.optimize.BC_imul_16.test(1, -2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_imul_4() {
        JavaTesterRunScheme.begin("test.optimize.BC_imul_4");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.optimize.BC_imul_4.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 16
            runString = "test(4)";
            if (16 != test.optimize.BC_imul_4.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 20
            runString = "test(5)";
            if (20 != test.optimize.BC_imul_4.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -4
            runString = "test(-1)";
            if (-4 != test.optimize.BC_imul_4.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -16
            runString = "test(-4)";
            if (-16 != test.optimize.BC_imul_4.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == -20
            runString = "test(-5)";
            if (-20 != test.optimize.BC_imul_4.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-256) == -1024
            runString = "test(-256)";
            if (-1024 != test.optimize.BC_imul_4.test(-256)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_ldiv_16() {
        JavaTesterRunScheme.begin("test.optimize.BC_ldiv_16");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.optimize.BC_ldiv_16.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(16) == 1
            runString = "test(16)";
            if (1L != test.optimize.BC_ldiv_16.test(16L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(17) == 1
            runString = "test(17)";
            if (1L != test.optimize.BC_ldiv_16.test(17L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 0
            runString = "test(-1)";
            if (0L != test.optimize.BC_ldiv_16.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-16) == -1
            runString = "test(-16)";
            if (-1L != test.optimize.BC_ldiv_16.test(-16L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-17) == -1
            runString = "test(-17)";
            if (-1L != test.optimize.BC_ldiv_16.test(-17L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1024) == -64
            runString = "test(-1024)";
            if (-64L != test.optimize.BC_ldiv_16.test(-1024L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_ldiv_4() {
        JavaTesterRunScheme.begin("test.optimize.BC_ldiv_4");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.optimize.BC_ldiv_4.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 1
            runString = "test(4)";
            if (1L != test.optimize.BC_ldiv_4.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 1
            runString = "test(5)";
            if (1L != test.optimize.BC_ldiv_4.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == 0
            runString = "test(-1)";
            if (0L != test.optimize.BC_ldiv_4.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -1
            runString = "test(-4)";
            if (-1L != test.optimize.BC_ldiv_4.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == -1
            runString = "test(-5)";
            if (-1L != test.optimize.BC_ldiv_4.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-256) == -64
            runString = "test(-256)";
            if (-64L != test.optimize.BC_ldiv_4.test(-256L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_lmul_16() {
        JavaTesterRunScheme.begin("test.optimize.BC_lmul_16");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.optimize.BC_lmul_16.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(16) == 256
            runString = "test(16)";
            if (256L != test.optimize.BC_lmul_16.test(16L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(17) == 272
            runString = "test(17)";
            if (272L != test.optimize.BC_lmul_16.test(17L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -16
            runString = "test(-1)";
            if (-16L != test.optimize.BC_lmul_16.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-16) == -256
            runString = "test(-16)";
            if (-256L != test.optimize.BC_lmul_16.test(-16L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-17) == -272
            runString = "test(-17)";
            if (-272L != test.optimize.BC_lmul_16.test(-17L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1024) == -16384
            runString = "test(-1024)";
            if (-16384L != test.optimize.BC_lmul_16.test(-1024L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_lmul_4() {
        JavaTesterRunScheme.begin("test.optimize.BC_lmul_4");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.optimize.BC_lmul_4.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 16
            runString = "test(4)";
            if (16L != test.optimize.BC_lmul_4.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 20
            runString = "test(5)";
            if (20L != test.optimize.BC_lmul_4.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == -4
            runString = "test(-1)";
            if (-4L != test.optimize.BC_lmul_4.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -16
            runString = "test(-4)";
            if (-16L != test.optimize.BC_lmul_4.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == -20
            runString = "test(-5)";
            if (-20L != test.optimize.BC_lmul_4.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-256) == -1024
            runString = "test(-256)";
            if (-1024L != test.optimize.BC_lmul_4.test(-256L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_lshr_C16() {
        JavaTesterRunScheme.begin("test.optimize.BC_lshr_C16");
        String runString = null;
        try {
        // test(87224824140) == 1330945
            runString = "test(87224824140)";
            if (1330945L != test.optimize.BC_lshr_C16.test(87224824140L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_lshr_C24() {
        JavaTesterRunScheme.begin("test.optimize.BC_lshr_C24");
        String runString = null;
        try {
        // test(87224824140) == 5199
            runString = "test(87224824140)";
            if (5199L != test.optimize.BC_lshr_C24.test(87224824140L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_BC_lshr_C32() {
        JavaTesterRunScheme.begin("test.optimize.BC_lshr_C32");
        String runString = null;
        try {
        // test(87224824140) == 20
            runString = "test(87224824140)";
            if (20L != test.optimize.BC_lshr_C32.test(87224824140L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_List_reorder_bug() {
        JavaTesterRunScheme.begin("test.optimize.List_reorder_bug");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.optimize.List_reorder_bug.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_optimize_TypeCastElem() {
        JavaTesterRunScheme.begin("test.optimize.TypeCastElem");
        String runString = null;
        try {
        // test(10,13,25) == 4683
            runString = "test(10,13,25)";
            if (4683 != test.optimize.TypeCastElem.test(10, 13, 25)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Boxed_TYPE_01() {
        JavaTesterRunScheme.begin("test.lang.Boxed_TYPE_01");
        String runString = null;
        try {
        // test(0) == boolean
            runString = "test(0)";
            if (!"boolean".equals(test.lang.Boxed_TYPE_01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == byte
            runString = "test(1)";
            if (!"byte".equals(test.lang.Boxed_TYPE_01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == char
            runString = "test(2)";
            if (!"char".equals(test.lang.Boxed_TYPE_01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == double
            runString = "test(3)";
            if (!"double".equals(test.lang.Boxed_TYPE_01.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == float
            runString = "test(4)";
            if (!"float".equals(test.lang.Boxed_TYPE_01.test(4))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == int
            runString = "test(5)";
            if (!"int".equals(test.lang.Boxed_TYPE_01.test(5))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == long
            runString = "test(6)";
            if (!"long".equals(test.lang.Boxed_TYPE_01.test(6))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == short
            runString = "test(7)";
            if (!"short".equals(test.lang.Boxed_TYPE_01.test(7))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == void
            runString = "test(8)";
            if (!"void".equals(test.lang.Boxed_TYPE_01.test(8))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Bridge_method01() {
        JavaTesterRunScheme.begin("test.lang.Bridge_method01");
        String runString = null;
        try {
        // test(0) == 1
            runString = "test(0)";
            if (1 != test.lang.Bridge_method01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.lang.Bridge_method01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_ClassLoader_loadClass01() {
        JavaTesterRunScheme.begin("test.lang.ClassLoader_loadClass01");
        String runString = null;
        try {
        // test(0) == class java.lang.String
            runString = "test(0)";
            if (!"class java.lang.String".equals(test.lang.ClassLoader_loadClass01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == !java.lang.ClassNotFoundException
            try {
                runString = "test(1)";
                test.lang.ClassLoader_loadClass01.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(2) == !java.lang.ClassNotFoundException
            try {
                runString = "test(2)";
                test.lang.ClassLoader_loadClass01.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_Literal01() {
        JavaTesterRunScheme.begin("test.lang.Class_Literal01");
        String runString = null;
        try {
        // test(0) == class java.lang.Object
            runString = "test(0)";
            if (!"class java.lang.Object".equals(test.lang.Class_Literal01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == class java.lang.String
            runString = "test(1)";
            if (!"class java.lang.String".equals(test.lang.Class_Literal01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == class java.lang.Class
            runString = "test(2)";
            if (!"class java.lang.Class".equals(test.lang.Class_Literal01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == class test.lang.Class_Literal01
            runString = "test(3)";
            if (!"class test.lang.Class_Literal01".equals(test.lang.Class_Literal01.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == null
            runString = "test(4)";
            if (null != test.lang.Class_Literal01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_asSubclass01() {
        JavaTesterRunScheme.begin("test.lang.Class_asSubclass01");
        String runString = null;
        try {
        // test(0) == !java.lang.ClassCastException
            try {
                runString = "test(0)";
                test.lang.Class_asSubclass01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.lang.Class_asSubclass01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassCastException
            try {
                runString = "test(2)";
                test.lang.Class_asSubclass01.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.lang.Class_asSubclass01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.lang.Class_asSubclass01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_cast01() {
        JavaTesterRunScheme.begin("test.lang.Class_cast01");
        String runString = null;
        try {
        // test(1) == !java.lang.ClassCastException
            try {
                runString = "test(1)";
                test.lang.Class_cast01.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.lang.Class_cast01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ClassCastException
            try {
                runString = "test(3)";
                test.lang.Class_cast01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassCastException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.lang.Class_cast01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.lang.Class_cast01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_cast02() {
        JavaTesterRunScheme.begin("test.lang.Class_cast02");
        String runString = null;
        try {
        // test(0) == -1
            runString = "test(0)";
            if (-1 != test.lang.Class_cast02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == -1
            runString = "test(1)";
            if (-1 != test.lang.Class_cast02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == -1
            runString = "test(2)";
            if (-1 != test.lang.Class_cast02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == -1
            runString = "test(3)";
            if (-1 != test.lang.Class_cast02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 4
            runString = "test(4)";
            if (4 != test.lang.Class_cast02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_forName01() {
        JavaTesterRunScheme.begin("test.lang.Class_forName01");
        String runString = null;
        try {
        // test(0) == class java.lang.Object
            runString = "test(0)";
            if (!"class java.lang.Object".equals(test.lang.Class_forName01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == class java.lang.String
            runString = "test(1)";
            if (!"class java.lang.String".equals(test.lang.Class_forName01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == class test.lang.Class_forName01
            runString = "test(2)";
            if (!"class test.lang.Class_forName01".equals(test.lang.Class_forName01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ClassNotFoundException
            try {
                runString = "test(3)";
                test.lang.Class_forName01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_forName02() {
        JavaTesterRunScheme.begin("test.lang.Class_forName02");
        String runString = null;
        try {
        // test(0) == class java.lang.Object
            runString = "test(0)";
            if (!"class java.lang.Object".equals(test.lang.Class_forName02.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == class java.lang.String
            runString = "test(1)";
            if (!"class java.lang.String".equals(test.lang.Class_forName02.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == class test.lang.Class_forName02
            runString = "test(2)";
            if (!"class test.lang.Class_forName02".equals(test.lang.Class_forName02.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ClassNotFoundException
            try {
                runString = "test(3)";
                test.lang.Class_forName02.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_forName03() {
        JavaTesterRunScheme.begin("test.lang.Class_forName03");
        String runString = null;
        try {
        // test(0) == !java.lang.ClassNotFoundException
            try {
                runString = "test(0)";
                test.lang.Class_forName03.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == class [Ljava.lang.String;
            runString = "test(1)";
            if (!"class [Ljava.lang.String;".equals(test.lang.Class_forName03.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassNotFoundException
            try {
                runString = "test(2)";
                test.lang.Class_forName03.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == class [I
            runString = "test(3)";
            if (!"class [I".equals(test.lang.Class_forName03.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ClassNotFoundException
            try {
                runString = "test(4)";
                test.lang.Class_forName03.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(5) == null
            runString = "test(5)";
            if (null != test.lang.Class_forName03.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_forName04() {
        JavaTesterRunScheme.begin("test.lang.Class_forName04");
        String runString = null;
        try {
        // test(0) == !java.lang.ClassNotFoundException
            try {
                runString = "test(0)";
                test.lang.Class_forName04.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == class [Ljava.lang.String;
            runString = "test(1)";
            if (!"class [Ljava.lang.String;".equals(test.lang.Class_forName04.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.ClassNotFoundException
            try {
                runString = "test(2)";
                test.lang.Class_forName04.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == class [I
            runString = "test(3)";
            if (!"class [I".equals(test.lang.Class_forName04.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.ClassNotFoundException
            try {
                runString = "test(4)";
                test.lang.Class_forName04.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ClassNotFoundException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(5) == null
            runString = "test(5)";
            if (null != test.lang.Class_forName04.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_forName05() {
        JavaTesterRunScheme.begin("test.lang.Class_forName05");
        String runString = null;
        try {
        // test(0) == class java.lang.String
            runString = "test(0)";
            if (!"class java.lang.String".equals(test.lang.Class_forName05.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == class [Ljava.lang.String;
            runString = "test(1)";
            if (!"class [Ljava.lang.String;".equals(test.lang.Class_forName05.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == null
            runString = "test(5)";
            if (null != test.lang.Class_forName05.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getComponentType01() {
        JavaTesterRunScheme.begin("test.lang.Class_getComponentType01");
        String runString = null;
        try {
        // test(0) == null
            runString = "test(0)";
            if (null != test.lang.Class_getComponentType01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == int
            runString = "test(1)";
            if (!"int".equals(test.lang.Class_getComponentType01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == null
            runString = "test(2)";
            if (null != test.lang.Class_getComponentType01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == java.lang.Object
            runString = "test(3)";
            if (!"java.lang.Object".equals(test.lang.Class_getComponentType01.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == null
            runString = "test(4)";
            if (null != test.lang.Class_getComponentType01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == null
            runString = "test(5)";
            if (null != test.lang.Class_getComponentType01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == [Ljava.lang.Object;
            runString = "test(6)";
            if (!"[Ljava.lang.Object;".equals(test.lang.Class_getComponentType01.test(6))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == null
            runString = "test(7)";
            if (null != test.lang.Class_getComponentType01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == null
            runString = "test(8)";
            if (null != test.lang.Class_getComponentType01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getName01() {
        JavaTesterRunScheme.begin("test.lang.Class_getName01");
        String runString = null;
        try {
        // test(0) == java.lang.Object
            runString = "test(0)";
            if (!"java.lang.Object".equals(test.lang.Class_getName01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == java.lang.Class
            runString = "test(1)";
            if (!"java.lang.Class".equals(test.lang.Class_getName01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == test.lang.Class_getName01
            runString = "test(2)";
            if (!"test.lang.Class_getName01".equals(test.lang.Class_getName01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (!"true".equals(test.lang.Class_getName01.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == null
            runString = "test(4)";
            if (null != test.lang.Class_getName01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getName02() {
        JavaTesterRunScheme.begin("test.lang.Class_getName02");
        String runString = null;
        try {
        // test(0) == int
            runString = "test(0)";
            if (!"int".equals(test.lang.Class_getName02.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == [I
            runString = "test(1)";
            if (!"[I".equals(test.lang.Class_getName02.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == [[Ljava.lang.Object;
            runString = "test(2)";
            if (!"[[Ljava.lang.Object;".equals(test.lang.Class_getName02.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == null
            runString = "test(3)";
            if (null != test.lang.Class_getName02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getSimpleName01() {
        JavaTesterRunScheme.begin("test.lang.Class_getSimpleName01");
        String runString = null;
        try {
        // test(0) == Object
            runString = "test(0)";
            if (!"Object".equals(test.lang.Class_getSimpleName01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == Class
            runString = "test(1)";
            if (!"Class".equals(test.lang.Class_getSimpleName01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == Class_getSimpleName01
            runString = "test(2)";
            if (!"Class_getSimpleName01".equals(test.lang.Class_getSimpleName01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == null
            runString = "test(3)";
            if (null != test.lang.Class_getSimpleName01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getSimpleName02() {
        JavaTesterRunScheme.begin("test.lang.Class_getSimpleName02");
        String runString = null;
        try {
        // test(0) == int
            runString = "test(0)";
            if (!"int".equals(test.lang.Class_getSimpleName02.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == int[]
            runString = "test(1)";
            if (!"int[]".equals(test.lang.Class_getSimpleName02.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == Object[][]
            runString = "test(2)";
            if (!"Object[][]".equals(test.lang.Class_getSimpleName02.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == null
            runString = "test(3)";
            if (null != test.lang.Class_getSimpleName02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_getSuperClass01() {
        JavaTesterRunScheme.begin("test.lang.Class_getSuperClass01");
        String runString = null;
        try {
        // test(0) == null
            runString = "test(0)";
            if (null != test.lang.Class_getSuperClass01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == null
            runString = "test(1)";
            if (null != test.lang.Class_getSuperClass01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == java.lang.Object
            runString = "test(2)";
            if (!"java.lang.Object".equals(test.lang.Class_getSuperClass01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == null
            runString = "test(3)";
            if (null != test.lang.Class_getSuperClass01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == java.lang.Number
            runString = "test(4)";
            if (!"java.lang.Number".equals(test.lang.Class_getSuperClass01.test(4))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == java.lang.Object
            runString = "test(5)";
            if (!"java.lang.Object".equals(test.lang.Class_getSuperClass01.test(5))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == java.lang.Object
            runString = "test(6)";
            if (!"java.lang.Object".equals(test.lang.Class_getSuperClass01.test(6))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == null
            runString = "test(7)";
            if (null != test.lang.Class_getSuperClass01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isArray01() {
        JavaTesterRunScheme.begin("test.lang.Class_isArray01");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isArray01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Class_isArray01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isArray01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.lang.Class_isArray01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isArray01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Class_isArray01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Class_isArray01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == false
            runString = "test(7)";
            if (false != test.lang.Class_isArray01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.lang.Class_isArray01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isAssignableFrom01() {
        JavaTesterRunScheme.begin("test.lang.Class_isAssignableFrom01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Class_isAssignableFrom01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isAssignableFrom01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isAssignableFrom01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isAssignableFrom01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isAssignableFrom01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Class_isAssignableFrom01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Class_isAssignableFrom01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == false
            runString = "test(7)";
            if (false != test.lang.Class_isAssignableFrom01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isAssignableFrom02() {
        JavaTesterRunScheme.begin("test.lang.Class_isAssignableFrom02");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isAssignableFrom02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Class_isAssignableFrom02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isAssignableFrom02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isAssignableFrom02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Class_isAssignableFrom02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Class_isAssignableFrom02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Class_isAssignableFrom02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.lang.Class_isAssignableFrom02.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isAssignableFrom03() {
        JavaTesterRunScheme.begin("test.lang.Class_isAssignableFrom03");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isAssignableFrom03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Class_isAssignableFrom03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isAssignableFrom03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.lang.Class_isAssignableFrom03.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isAssignableFrom03.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Class_isAssignableFrom03.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Class_isAssignableFrom03.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == false
            runString = "test(7)";
            if (false != test.lang.Class_isAssignableFrom03.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance01() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Class_isInstance01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Class_isInstance01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Class_isInstance01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInstance01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance02() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance02");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInstance02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Class_isInstance02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isInstance02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInstance02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance03() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance03");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInstance03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isInstance03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Class_isInstance03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInstance03.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance04() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance04");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInstance04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isInstance04.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Class_isInstance04.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInstance04.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance05() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance05");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInstance05.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isInstance05.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Class_isInstance05.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInstance05.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInstance06() {
        JavaTesterRunScheme.begin("test.lang.Class_isInstance06");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInstance06.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isInstance06.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Class_isInstance06.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.lang.Class_isInstance06.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isInstance06.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isInterface01() {
        JavaTesterRunScheme.begin("test.lang.Class_isInterface01");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Class_isInterface01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isInterface01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isInterface01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isInterface01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isInterface01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Class_isInterface01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Class_isInterface01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == false
            runString = "test(7)";
            if (false != test.lang.Class_isInterface01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.lang.Class_isInterface01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Class_isPrimitive01() {
        JavaTesterRunScheme.begin("test.lang.Class_isPrimitive01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Class_isPrimitive01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Class_isPrimitive01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Class_isPrimitive01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.Class_isPrimitive01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Class_isPrimitive01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Class_isPrimitive01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Class_isPrimitive01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.lang.Class_isPrimitive01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.lang.Class_isPrimitive01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Double_toString() {
        JavaTesterRunScheme.begin("test.lang.Double_toString");
        String runString = null;
        try {
        // test(0) == 9.834050399508132E-4
            runString = "test(0)";
            if (!"9.834050399508132E-4".equals(test.lang.Double_toString.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greater01() {
        JavaTesterRunScheme.begin("test.lang.Int_greater01");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greater01.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Int_greater01.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_greater01.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_greater01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Int_greater01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Int_greater01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greater01.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greater02() {
        JavaTesterRunScheme.begin("test.lang.Int_greater02");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greater02.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Int_greater02.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_greater02.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_greater02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_greater02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Int_greater02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Int_greater02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Int_greater02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greater02.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greater03() {
        JavaTesterRunScheme.begin("test.lang.Int_greater03");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greater03.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == false
            runString = "test(-6)";
            if (false != test.lang.Int_greater03.test(-6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == false
            runString = "test(-5)";
            if (false != test.lang.Int_greater03.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == true
            runString = "test(-4)";
            if (true != test.lang.Int_greater03.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_greater03.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_greater03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Int_greater03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Int_greater03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greater03.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greaterEqual01() {
        JavaTesterRunScheme.begin("test.lang.Int_greaterEqual01");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greaterEqual01.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Int_greaterEqual01.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_greaterEqual01.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_greaterEqual01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Int_greaterEqual01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Int_greaterEqual01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greaterEqual01.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greaterEqual02() {
        JavaTesterRunScheme.begin("test.lang.Int_greaterEqual02");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greaterEqual02.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Int_greaterEqual02.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_greaterEqual02.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_greaterEqual02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_greaterEqual02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Int_greaterEqual02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Int_greaterEqual02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Int_greaterEqual02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greaterEqual02.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_greaterEqual03() {
        JavaTesterRunScheme.begin("test.lang.Int_greaterEqual03");
        String runString = null;
        try {
        // test(-2147483648) == false
            runString = "test(-2147483648)";
            if (false != test.lang.Int_greaterEqual03.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == false
            runString = "test(-6)";
            if (false != test.lang.Int_greaterEqual03.test(-6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == true
            runString = "test(-5)";
            if (true != test.lang.Int_greaterEqual03.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == true
            runString = "test(-4)";
            if (true != test.lang.Int_greaterEqual03.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_greaterEqual03.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_greaterEqual03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Int_greaterEqual03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Int_greaterEqual03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == true
            runString = "test(2147483647)";
            if (true != test.lang.Int_greaterEqual03.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_less01() {
        JavaTesterRunScheme.begin("test.lang.Int_less01");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_less01.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Int_less01.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_less01.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_less01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_less01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Int_less01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_less01.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_less02() {
        JavaTesterRunScheme.begin("test.lang.Int_less02");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_less02.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Int_less02.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_less02.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_less02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Int_less02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Int_less02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Int_less02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_less02.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_less03() {
        JavaTesterRunScheme.begin("test.lang.Int_less03");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_less03.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == true
            runString = "test(-6)";
            if (true != test.lang.Int_less03.test(-6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == false
            runString = "test(-5)";
            if (false != test.lang.Int_less03.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == false
            runString = "test(-4)";
            if (false != test.lang.Int_less03.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_less03.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_less03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_less03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Int_less03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_less03.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_lessEqual01() {
        JavaTesterRunScheme.begin("test.lang.Int_lessEqual01");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_lessEqual01.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Int_lessEqual01.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_lessEqual01.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_lessEqual01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_lessEqual01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Int_lessEqual01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_lessEqual01.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_lessEqual02() {
        JavaTesterRunScheme.begin("test.lang.Int_lessEqual02");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_lessEqual02.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Int_lessEqual02.test(-2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Int_lessEqual02.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Int_lessEqual02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Int_lessEqual02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Int_lessEqual02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Int_lessEqual02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_lessEqual02.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Int_lessEqual03() {
        JavaTesterRunScheme.begin("test.lang.Int_lessEqual03");
        String runString = null;
        try {
        // test(-2147483648) == true
            runString = "test(-2147483648)";
            if (true != test.lang.Int_lessEqual03.test(-2147483648)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == true
            runString = "test(-6)";
            if (true != test.lang.Int_lessEqual03.test(-6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == true
            runString = "test(-5)";
            if (true != test.lang.Int_lessEqual03.test(-5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == false
            runString = "test(-4)";
            if (false != test.lang.Int_lessEqual03.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Int_lessEqual03.test(-1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Int_lessEqual03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Int_lessEqual03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Int_lessEqual03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2147483647) == false
            runString = "test(2147483647)";
            if (false != test.lang.Int_lessEqual03.test(2147483647)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_JDK_ClassLoaders01() {
        JavaTesterRunScheme.begin("test.lang.JDK_ClassLoaders01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.JDK_ClassLoaders01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.JDK_ClassLoaders01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.JDK_ClassLoaders01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.lang.JDK_ClassLoaders01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.JDK_ClassLoaders01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.JDK_ClassLoaders01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.JDK_ClassLoaders01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_JDK_ClassLoaders02() {
        JavaTesterRunScheme.begin("test.lang.JDK_ClassLoaders02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.JDK_ClassLoaders02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greater01() {
        JavaTesterRunScheme.begin("test.lang.Long_greater01");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greater01.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Long_greater01.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_greater01.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_greater01.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Long_greater01.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Long_greater01.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greater01.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greater02() {
        JavaTesterRunScheme.begin("test.lang.Long_greater02");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greater02.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Long_greater02.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_greater02.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_greater02.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_greater02.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Long_greater02.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Long_greater02.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Long_greater02.test(6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greater02.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greater03() {
        JavaTesterRunScheme.begin("test.lang.Long_greater03");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greater03.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == false
            runString = "test(-6)";
            if (false != test.lang.Long_greater03.test(-6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == false
            runString = "test(-5)";
            if (false != test.lang.Long_greater03.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == true
            runString = "test(-4)";
            if (true != test.lang.Long_greater03.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_greater03.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_greater03.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Long_greater03.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Long_greater03.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greater03.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greaterEqual01() {
        JavaTesterRunScheme.begin("test.lang.Long_greaterEqual01");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greaterEqual01.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Long_greaterEqual01.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_greaterEqual01.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_greaterEqual01.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Long_greaterEqual01.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Long_greaterEqual01.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greaterEqual01.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greaterEqual02() {
        JavaTesterRunScheme.begin("test.lang.Long_greaterEqual02");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greaterEqual02.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == false
            runString = "test(-2)";
            if (false != test.lang.Long_greaterEqual02.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_greaterEqual02.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_greaterEqual02.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_greaterEqual02.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.lang.Long_greaterEqual02.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Long_greaterEqual02.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Long_greaterEqual02.test(6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greaterEqual02.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_greaterEqual03() {
        JavaTesterRunScheme.begin("test.lang.Long_greaterEqual03");
        String runString = null;
        try {
        // test(-9223372036854775808) == false
            runString = "test(-9223372036854775808)";
            if (false != test.lang.Long_greaterEqual03.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == false
            runString = "test(-6)";
            if (false != test.lang.Long_greaterEqual03.test(-6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == true
            runString = "test(-5)";
            if (true != test.lang.Long_greaterEqual03.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == true
            runString = "test(-4)";
            if (true != test.lang.Long_greaterEqual03.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_greaterEqual03.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_greaterEqual03.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Long_greaterEqual03.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.Long_greaterEqual03.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == true
            runString = "test(9223372036854775807)";
            if (true != test.lang.Long_greaterEqual03.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_less01() {
        JavaTesterRunScheme.begin("test.lang.Long_less01");
        String runString = null;
        try {
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_less01.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Long_less01.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_less01.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_less01.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_less01.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Long_less01.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_less01.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_less02() {
        JavaTesterRunScheme.begin("test.lang.Long_less02");
        String runString = null;
        try {
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_less02.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Long_less02.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_less02.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_less02.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Long_less02.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Long_less02.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Long_less02.test(6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_less02.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_less03() {
        JavaTesterRunScheme.begin("test.lang.Long_less03");
        String runString = null;
        try {
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_less03.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == true
            runString = "test(-6)";
            if (true != test.lang.Long_less03.test(-6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == false
            runString = "test(-5)";
            if (false != test.lang.Long_less03.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == false
            runString = "test(-4)";
            if (false != test.lang.Long_less03.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_less03.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_less03.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_less03.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Long_less03.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_less03.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_lessEqual01() {
        JavaTesterRunScheme.begin("test.lang.Long_lessEqual01");
        String runString = null;
        try {
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Long_lessEqual01.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_lessEqual01.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Long_lessEqual01.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_lessEqual01.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_lessEqual01.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_lessEqual01.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Long_lessEqual01.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_lessEqual01.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_lessEqual02() {
        JavaTesterRunScheme.begin("test.lang.Long_lessEqual02");
        String runString = null;
        try {
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_lessEqual02.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-2) == true
            runString = "test(-2)";
            if (true != test.lang.Long_lessEqual02.test(-2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == true
            runString = "test(-1)";
            if (true != test.lang.Long_lessEqual02.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Long_lessEqual02.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Long_lessEqual02.test(4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.lang.Long_lessEqual02.test(5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == false
            runString = "test(6)";
            if (false != test.lang.Long_lessEqual02.test(6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_lessEqual02.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Long_lessEqual03() {
        JavaTesterRunScheme.begin("test.lang.Long_lessEqual03");
        String runString = null;
        try {
        // test(-9223372036854775808) == true
            runString = "test(-9223372036854775808)";
            if (true != test.lang.Long_lessEqual03.test(-9223372036854775808L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-6) == true
            runString = "test(-6)";
            if (true != test.lang.Long_lessEqual03.test(-6L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-5) == true
            runString = "test(-5)";
            if (true != test.lang.Long_lessEqual03.test(-5L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == false
            runString = "test(-4)";
            if (false != test.lang.Long_lessEqual03.test(-4L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-1) == false
            runString = "test(-1)";
            if (false != test.lang.Long_lessEqual03.test(-1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Long_lessEqual03.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Long_lessEqual03.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Long_lessEqual03.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(9223372036854775807) == false
            runString = "test(9223372036854775807)";
            if (false != test.lang.Long_lessEqual03.test(9223372036854775807L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Math_pow() {
        JavaTesterRunScheme.begin("test.lang.Math_pow");
        String runString = null;
        try {
        // test(2.0) == 4.0
            runString = "test(2.0)";
            if (4.0 != test.lang.Math_pow.test(2.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3.1) == 8.574187700290345
            runString = "test(3.1)";
            if (8.574187700290345 != test.lang.Math_pow.test(3.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_clone01() {
        JavaTesterRunScheme.begin("test.lang.Object_clone01");
        String runString = null;
        try {
        // test(0) == !java.lang.CloneNotSupportedException
            try {
                runString = "test(0)";
                test.lang.Object_clone01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.CloneNotSupportedException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_clone02() {
        JavaTesterRunScheme.begin("test.lang.Object_clone02");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Object_clone02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_equals01() {
        JavaTesterRunScheme.begin("test.lang.Object_equals01");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.lang.Object_equals01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.lang.Object_equals01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Object_equals01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.lang.Object_equals01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.lang.Object_equals01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == false
            runString = "test(5)";
            if (false != test.lang.Object_equals01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.lang.Object_equals01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == false
            runString = "test(7)";
            if (false != test.lang.Object_equals01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.lang.Object_equals01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_getClass01() {
        JavaTesterRunScheme.begin("test.lang.Object_getClass01");
        String runString = null;
        try {
        // test(0) == class java.lang.Object
            runString = "test(0)";
            if (!"class java.lang.Object".equals(test.lang.Object_getClass01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == class java.lang.String
            runString = "test(1)";
            if (!"class java.lang.String".equals(test.lang.Object_getClass01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == class test.lang.Object_getClass01
            runString = "test(2)";
            if (!"class test.lang.Object_getClass01".equals(test.lang.Object_getClass01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_hashCode01() {
        JavaTesterRunScheme.begin("test.lang.Object_hashCode01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_hashCode01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_notify01() {
        JavaTesterRunScheme.begin("test.lang.Object_notify01");
        String runString = null;
        try {
        // test(0) == !java.lang.IllegalMonitorStateException
            try {
                runString = "test(0)";
                test.lang.Object_notify01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalMonitorStateException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_notify02() {
        JavaTesterRunScheme.begin("test.lang.Object_notify02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_notify02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_notifyAll01() {
        JavaTesterRunScheme.begin("test.lang.Object_notifyAll01");
        String runString = null;
        try {
        // test(0) == !java.lang.IllegalMonitorStateException
            try {
                runString = "test(0)";
                test.lang.Object_notifyAll01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalMonitorStateException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_notifyAll02() {
        JavaTesterRunScheme.begin("test.lang.Object_notifyAll02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_notifyAll02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_toString01() {
        JavaTesterRunScheme.begin("test.lang.Object_toString01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_toString01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.Object_toString01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == false
            runString = "test(2)";
            if (false != test.lang.Object_toString01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_toString02() {
        JavaTesterRunScheme.begin("test.lang.Object_toString02");
        String runString = null;
        try {
        // test(0) == XYZ
            runString = "test(0)";
            if (!"XYZ".equals(test.lang.Object_toString02.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == string
            runString = "test(1)";
            if (!"string".equals(test.lang.Object_toString02.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == class java.lang.String
            runString = "test(2)";
            if (!"class java.lang.String".equals(test.lang.Object_toString02.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.lang.Object_toString02.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_wait01() {
        JavaTesterRunScheme.begin("test.lang.Object_wait01");
        String runString = null;
        try {
        // test(0) == !java.lang.IllegalMonitorStateException
            try {
                runString = "test(0)";
                test.lang.Object_wait01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalMonitorStateException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_wait02() {
        JavaTesterRunScheme.begin("test.lang.Object_wait02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_wait02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_Object_wait03() {
        JavaTesterRunScheme.begin("test.lang.Object_wait03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.Object_wait03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_StringCoding_Scale() {
        JavaTesterRunScheme.begin("test.lang.StringCoding_Scale");
        String runString = null;
        try {
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.lang.StringCoding_Scale.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.lang.StringCoding_Scale.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.lang.StringCoding_Scale.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_String_intern01() {
        JavaTesterRunScheme.begin("test.lang.String_intern01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.String_intern01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_String_intern02() {
        JavaTesterRunScheme.begin("test.lang.String_intern02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.String_intern02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.String_intern02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.String_intern02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_String_intern03() {
        JavaTesterRunScheme.begin("test.lang.String_intern03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.String_intern03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.String_intern03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.String_intern03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_String_valueOf01() {
        JavaTesterRunScheme.begin("test.lang.String_valueOf01");
        String runString = null;
        try {
        // test(0) == null
            runString = "test(0)";
            if (!"null".equals(test.lang.String_valueOf01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == string
            runString = "test(1)";
            if (!"string".equals(test.lang.String_valueOf01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_lang_System_identityHashCode01() {
        JavaTesterRunScheme.begin("test.lang.System_identityHashCode01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.lang.System_identityHashCode01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.lang.System_identityHashCode01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.lang.System_identityHashCode01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.lang.System_identityHashCode01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_allocate01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_allocate01");
        String runString = null;
        try {
        // test(80) == 3160
            runString = "test(80)";
            if (3160 != test.hotpath.HP_allocate01.test(80)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_allocate02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_allocate02");
        String runString = null;
        try {
        // test(100) == 4950
            runString = "test(100)";
            if (4950 != test.hotpath.HP_allocate02.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_allocate03() {
        JavaTesterRunScheme.begin("test.hotpath.HP_allocate03");
        String runString = null;
        try {
        // test(100) == 100
            runString = "test(100)";
            if (100 != test.hotpath.HP_allocate03.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_array01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_array01");
        String runString = null;
        try {
        // test(40) == 780
            runString = "test(40)";
            if (780 != test.hotpath.HP_array01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_array02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_array02");
        String runString = null;
        try {
        // test(40) == 5460
            runString = "test(40)";
            if (5460 != test.hotpath.HP_array02.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_array03() {
        JavaTesterRunScheme.begin("test.hotpath.HP_array03");
        String runString = null;
        try {
        // test(40) == 3200
            runString = "test(40)";
            if (3200 != test.hotpath.HP_array03.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_array04() {
        JavaTesterRunScheme.begin("test.hotpath.HP_array04");
        String runString = null;
        try {
        // test(80) == 15645
            runString = "test(80)";
            if (15645 != test.hotpath.HP_array04.test(80)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_control01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_control01");
        String runString = null;
        try {
        // test(40) == 2432
            runString = "test(40)";
            if (2432 != test.hotpath.HP_control01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(80) == 3243
            runString = "test(80)";
            if (3243 != test.hotpath.HP_control01.test(80)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_control02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_control02");
        String runString = null;
        try {
        // test(60) == 515
            runString = "test(60)";
            if (515 != test.hotpath.HP_control02.test(60)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(100) == 555
            runString = "test(100)";
            if (555 != test.hotpath.HP_control02.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_convert01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_convert01");
        String runString = null;
        try {
        // test(100) == 4950
            runString = "test(100)";
            if (4950 != test.hotpath.HP_convert01.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_count() {
        JavaTesterRunScheme.begin("test.hotpath.HP_count");
        String runString = null;
        try {
        // test(40) == 820
            runString = "test(40)";
            if (820 != test.hotpath.HP_count.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_dead01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_dead01");
        String runString = null;
        try {
        // test(10) == 110
            runString = "test(10)";
            if (110 != test.hotpath.HP_dead01.test(10)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(20) == 420
            runString = "test(20)";
            if (420 != test.hotpath.HP_dead01.test(20)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(30) == 930
            runString = "test(30)";
            if (930 != test.hotpath.HP_dead01.test(30)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(40) == 1640
            runString = "test(40)";
            if (1640 != test.hotpath.HP_dead01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_demo01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_demo01");
        String runString = null;
        try {
        // test(80) == 3160
            runString = "test(80)";
            if (3160 != test.hotpath.HP_demo01.test(80)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_field01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_field01");
        String runString = null;
        try {
        // test(40) == 820
            runString = "test(40)";
            if (820 != test.hotpath.HP_field01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_field02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_field02");
        String runString = null;
        try {
        // test(40) == 820
            runString = "test(40)";
            if (820 != test.hotpath.HP_field02.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_field03() {
        JavaTesterRunScheme.begin("test.hotpath.HP_field03");
        String runString = null;
        try {
        // test(1000) == 2019980
            runString = "test(1000)";
            if (2019980 != test.hotpath.HP_field03.test(1000)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_field04() {
        JavaTesterRunScheme.begin("test.hotpath.HP_field04");
        String runString = null;
        try {
        // test(40) == 4972
            runString = "test(40)";
            if (4972 != test.hotpath.HP_field04.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1000) == 2019980
            runString = "test(1000)";
            if (2019980 != test.hotpath.HP_field04.test(1000)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_idea() {
        JavaTesterRunScheme.begin("test.hotpath.HP_idea");
        String runString = null;
        try {
        // test(3000) == true
            runString = "test(3000)";
            if (true != test.hotpath.HP_idea.test(3000)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_inline01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_inline01");
        String runString = null;
        try {
        // test(20) == 215
            runString = "test(20)";
            if (215 != test.hotpath.HP_inline01.test(20)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_inline02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_inline02");
        String runString = null;
        try {
        // test(20) == 196
            runString = "test(20)";
            if (196 != test.hotpath.HP_inline02.test(20)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_invoke01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_invoke01");
        String runString = null;
        try {
        // test(40) == 3049480
            runString = "test(40)";
            if (3049480 != test.hotpath.HP_invoke01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(80) == 6098960
            runString = "test(80)";
            if (6098960 != test.hotpath.HP_invoke01.test(80)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_life() {
        JavaTesterRunScheme.begin("test.hotpath.HP_life");
        String runString = null;
        try {
        // test(5) == -1756613086
            runString = "test(5)";
            if (-1756613086 != test.hotpath.HP_life.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_nest01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_nest01");
        String runString = null;
        try {
        // test(15) == 3255
            runString = "test(15)";
            if (3255 != test.hotpath.HP_nest01.test(15)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_nest02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_nest02");
        String runString = null;
        try {
        // test(15) == 3255
            runString = "test(15)";
            if (3255 != test.hotpath.HP_nest02.test(15)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_scope01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_scope01");
        String runString = null;
        try {
        // test(40) == 59480
            runString = "test(40)";
            if (59480 != test.hotpath.HP_scope01.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_scope02() {
        JavaTesterRunScheme.begin("test.hotpath.HP_scope02");
        String runString = null;
        try {
        // test(40) == 20
            runString = "test(40)";
            if (20 != test.hotpath.HP_scope02.test(40)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(22) == 20
            runString = "test(22)";
            if (20 != test.hotpath.HP_scope02.test(22)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_series() {
        JavaTesterRunScheme.begin("test.hotpath.HP_series");
        String runString = null;
        try {
        // test(100) == 0.6248571921291398
            runString = "test(100)";
            if (0.6248571921291398 != test.hotpath.HP_series.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_hotpath_HP_trees01() {
        JavaTesterRunScheme.begin("test.hotpath.HP_trees01");
        String runString = null;
        try {
        // test(1000) == 8100
            runString = "test(1000)";
            if (8100 != test.hotpath.HP_trees01.test(1000)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_get01() {
        JavaTesterRunScheme.begin("test.reflect.Array_get01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (!"0".equals(test.reflect.Array_get01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (!"1".equals(test.reflect.Array_get01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (!"2".equals(test.reflect.Array_get01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_get01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_get02() {
        JavaTesterRunScheme.begin("test.reflect.Array_get02");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.reflect.Array_get02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if (21 != test.reflect.Array_get02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if (42 != test.reflect.Array_get02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_get02.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_get03() {
        JavaTesterRunScheme.begin("test.reflect.Array_get03");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if ((byte) 11 != test.reflect.Array_get03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if ((byte) 21 != test.reflect.Array_get03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if ((byte) 42 != test.reflect.Array_get03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_get03.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getBoolean01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getBoolean01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Array_getBoolean01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.reflect.Array_getBoolean01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Array_getBoolean01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getBoolean01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getByte01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getByte01");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if ((byte) 11 != test.reflect.Array_getByte01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if ((byte) 21 != test.reflect.Array_getByte01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if ((byte) 42 != test.reflect.Array_getByte01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getByte01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getChar01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getChar01");
        String runString = null;
        try {
        // test(0) == '\13'
            runString = "test(0)";
            if ((char) 11 != test.reflect.Array_getChar01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == '\25'
            runString = "test(1)";
            if ((char) 21 != test.reflect.Array_getChar01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == '*'
            runString = "test(2)";
            if ((char) 42 != test.reflect.Array_getChar01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getChar01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getDouble01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getDouble01");
        String runString = null;
        try {
        // test(0) == 11.1
            runString = "test(0)";
            if (11.1 != test.reflect.Array_getDouble01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21.1
            runString = "test(1)";
            if (21.1 != test.reflect.Array_getDouble01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42.1
            runString = "test(2)";
            if (42.1 != test.reflect.Array_getDouble01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getDouble01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getFloat01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getFloat01");
        String runString = null;
        try {
        // test(0) == 11.1
            runString = "test(0)";
            if (11.1f != test.reflect.Array_getFloat01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21.1
            runString = "test(1)";
            if (21.1f != test.reflect.Array_getFloat01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42.1
            runString = "test(2)";
            if (42.1f != test.reflect.Array_getFloat01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getFloat01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getInt01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getInt01");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.reflect.Array_getInt01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if (21 != test.reflect.Array_getInt01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if (42 != test.reflect.Array_getInt01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getInt01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getLength01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getLength01");
        String runString = null;
        try {
        // test(0) == 3
            runString = "test(0)";
            if (3 != test.reflect.Array_getLength01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 4
            runString = "test(1)";
            if (4 != test.reflect.Array_getLength01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 1
            runString = "test(2)";
            if (1 != test.reflect.Array_getLength01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.NullPointerException
            try {
                runString = "test(3)";
                test.reflect.Array_getLength01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getLong01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getLong01");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11L != test.reflect.Array_getLong01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if (21L != test.reflect.Array_getLong01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if (42L != test.reflect.Array_getLong01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getLong01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_getShort01() {
        JavaTesterRunScheme.begin("test.reflect.Array_getShort01");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if ((short) 11 != test.reflect.Array_getShort01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 21
            runString = "test(1)";
            if ((short) 21 != test.reflect.Array_getShort01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 42
            runString = "test(2)";
            if ((short) 42 != test.reflect.Array_getShort01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.reflect.Array_getShort01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance01() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance01");
        String runString = null;
        try {
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Array_newInstance01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance02() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance02");
        String runString = null;
        try {
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Array_newInstance02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance03() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance03");
        String runString = null;
        try {
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Array_newInstance03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance04() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance04");
        String runString = null;
        try {
        // test(1,0) == true
            runString = "test(1,0)";
            if (true != test.reflect.Array_newInstance04.test(1, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance05() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance05");
        String runString = null;
        try {
        // test(1,3) == true
            runString = "test(1,3)";
            if (true != test.reflect.Array_newInstance05.test(1, 3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_newInstance06() {
        JavaTesterRunScheme.begin("test.reflect.Array_newInstance06");
        String runString = null;
        try {
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Array_newInstance06.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_set01() {
        JavaTesterRunScheme.begin("test.reflect.Array_set01");
        String runString = null;
        try {
        // test(0,"1") == 1
            runString = "test(0,\"1\")";
            if (!"1".equals(test.reflect.Array_set01.test(0, "1"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,"2") == 2
            runString = "test(1,\"2\")";
            if (!"2".equals(test.reflect.Array_set01.test(1, "2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,"XXd") == XXd
            runString = "test(0,\"XXd\")";
            if (!"XXd".equals(test.reflect.Array_set01.test(0, "XXd"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,"--") == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,\"--\")";
                test.reflect.Array_set01.test(3, "--");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_set02() {
        JavaTesterRunScheme.begin("test.reflect.Array_set02");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if (11 != test.reflect.Array_set02.test(0, 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if (21 != test.reflect.Array_set02.test(1, 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if (42 != test.reflect.Array_set02.test(0, 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_set02.test(3, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_set03() {
        JavaTesterRunScheme.begin("test.reflect.Array_set03");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if ((byte) 11 != test.reflect.Array_set03.test(0, (byte) 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if ((byte) 21 != test.reflect.Array_set03.test(1, (byte) 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if ((byte) 42 != test.reflect.Array_set03.test(0, (byte) 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_set03.test(3, (byte) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setBoolean01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setBoolean01");
        String runString = null;
        try {
        // test(0,true) == true
            runString = "test(0,true)";
            if (true != test.reflect.Array_setBoolean01.test(0, true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,false) == false
            runString = "test(1,false)";
            if (false != test.reflect.Array_setBoolean01.test(1, false)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,true) == true
            runString = "test(2,true)";
            if (true != test.reflect.Array_setBoolean01.test(2, true)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,false) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,false)";
                test.reflect.Array_setBoolean01.test(3, false);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setByte01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setByte01");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if ((byte) 11 != test.reflect.Array_setByte01.test(0, (byte) 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if ((byte) 21 != test.reflect.Array_setByte01.test(1, (byte) 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if ((byte) 42 != test.reflect.Array_setByte01.test(0, (byte) 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_setByte01.test(3, (byte) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setChar01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setChar01");
        String runString = null;
        try {
        // test(0,'\13') == '\13'
            runString = "test(0,'\13')";
            if ((char) 11 != test.reflect.Array_setChar01.test(0, (char) 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,'\25') == '\25'
            runString = "test(1,'\25')";
            if ((char) 21 != test.reflect.Array_setChar01.test(1, (char) 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,'*') == '*'
            runString = "test(0,'*')";
            if ((char) 42 != test.reflect.Array_setChar01.test(0, (char) 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,'\0') == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,'\0')";
                test.reflect.Array_setChar01.test(3, (char) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setDouble01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setDouble01");
        String runString = null;
        try {
        // test(0,11.1) == 11.1
            runString = "test(0,11.1)";
            if (11.1 != test.reflect.Array_setDouble01.test(0, 11.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21.1) == 21.1
            runString = "test(1,21.1)";
            if (21.1 != test.reflect.Array_setDouble01.test(1, 21.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42.1) == 42.1
            runString = "test(0,42.1)";
            if (42.1 != test.reflect.Array_setDouble01.test(0, 42.1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0.1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0.1)";
                test.reflect.Array_setDouble01.test(3, 0.1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setFloat01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setFloat01");
        String runString = null;
        try {
        // test(0,11.1) == 11.1
            runString = "test(0,11.1)";
            if (11.1f != test.reflect.Array_setFloat01.test(0, 11.1f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21.1) == 21.1
            runString = "test(1,21.1)";
            if (21.1f != test.reflect.Array_setFloat01.test(1, 21.1f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42.1) == 42.1
            runString = "test(0,42.1)";
            if (42.1f != test.reflect.Array_setFloat01.test(0, 42.1f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0.1) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0.1)";
                test.reflect.Array_setFloat01.test(3, 0.1f);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setInt01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setInt01");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if (11 != test.reflect.Array_setInt01.test(0, 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if (21 != test.reflect.Array_setInt01.test(1, 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if (42 != test.reflect.Array_setInt01.test(0, 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_setInt01.test(3, 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setLong01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setLong01");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if (11L != test.reflect.Array_setLong01.test(0, 11L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if (21L != test.reflect.Array_setLong01.test(1, 21L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if (42L != test.reflect.Array_setLong01.test(0, 42L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_setLong01.test(3, 0L);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Array_setShort01() {
        JavaTesterRunScheme.begin("test.reflect.Array_setShort01");
        String runString = null;
        try {
        // test(0,11) == 11
            runString = "test(0,11)";
            if ((short) 11 != test.reflect.Array_setShort01.test(0, (short) 11)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,21) == 21
            runString = "test(1,21)";
            if ((short) 21 != test.reflect.Array_setShort01.test(1, (short) 21)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(0,42) == 42
            runString = "test(0,42)";
            if ((short) 42 != test.reflect.Array_setShort01.test(0, (short) 42)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,0) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3,0)";
                test.reflect.Array_setShort01.test(3, (short) 0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getDeclaredField01() {
        JavaTesterRunScheme.begin("test.reflect.Class_getDeclaredField01");
        String runString = null;
        try {
        // test("test") == !java.lang.NoSuchFieldException
            try {
                runString = "test(\"test\")";
                test.reflect.Class_getDeclaredField01.test("test");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchFieldException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("field") == field
            runString = "test(\"field\")";
            if (!"field".equals(test.reflect.Class_getDeclaredField01.test("field"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("f2") == f2
            runString = "test(\"f2\")";
            if (!"f2".equals(test.reflect.Class_getDeclaredField01.test("f2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getDeclaredMethod01() {
        JavaTesterRunScheme.begin("test.reflect.Class_getDeclaredMethod01");
        String runString = null;
        try {
        // test("test") == !java.lang.NoSuchMethodException
            try {
                runString = "test(\"test\")";
                test.reflect.Class_getDeclaredMethod01.test("test");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("main") == main
            runString = "test(\"main\")";
            if (!"main".equals(test.reflect.Class_getDeclaredMethod01.test("main"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("xx") == !java.lang.NoSuchMethodException
            try {
                runString = "test(\"xx\")";
                test.reflect.Class_getDeclaredMethod01.test("xx");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getField01() {
        JavaTesterRunScheme.begin("test.reflect.Class_getField01");
        String runString = null;
        try {
        // test("test") == !java.lang.NoSuchFieldException
            try {
                runString = "test(\"test\")";
                test.reflect.Class_getField01.test("test");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchFieldException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("field") == field
            runString = "test(\"field\")";
            if (!"field".equals(test.reflect.Class_getField01.test("field"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("field2") == field2
            runString = "test(\"field2\")";
            if (!"field2".equals(test.reflect.Class_getField01.test("field2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("field3") == !java.lang.NoSuchFieldException
            try {
                runString = "test(\"field3\")";
                test.reflect.Class_getField01.test("field3");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchFieldException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getField02() {
        JavaTesterRunScheme.begin("test.reflect.Class_getField02");
        String runString = null;
        try {
        // test("test") == !java.lang.NoSuchFieldException
            try {
                runString = "test(\"test\")";
                test.reflect.Class_getField02.test("test");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchFieldException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("field") == field
            runString = "test(\"field\")";
            if (!"field".equals(test.reflect.Class_getField02.test("field"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("field2") == field2
            runString = "test(\"field2\")";
            if (!"field2".equals(test.reflect.Class_getField02.test("field2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("field3") == !java.lang.NoSuchFieldException
            try {
                runString = "test(\"field3\")";
                test.reflect.Class_getField02.test("field3");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchFieldException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("field4") == field4
            runString = "test(\"field4\")";
            if (!"field4".equals(test.reflect.Class_getField02.test("field4"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getMethod01() {
        JavaTesterRunScheme.begin("test.reflect.Class_getMethod01");
        String runString = null;
        try {
        // test("test") == !java.lang.NoSuchMethodException
            try {
                runString = "test(\"test\")";
                test.reflect.Class_getMethod01.test("test");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test("main") == main
            runString = "test(\"main\")";
            if (!"main".equals(test.reflect.Class_getMethod01.test("main"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("xx") == !java.lang.NoSuchMethodException
            try {
                runString = "test(\"xx\")";
                test.reflect.Class_getMethod01.test("xx");
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_getMethod02() {
        JavaTesterRunScheme.begin("test.reflect.Class_getMethod02");
        String runString = null;
        try {
        // test(0) == !java.lang.NoSuchMethodException
            try {
                runString = "test(0)";
                test.reflect.Class_getMethod02.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == test
            runString = "test(1)";
            if (!"test".equals(test.reflect.Class_getMethod02.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.NoSuchMethodException
            try {
                runString = "test(2)";
                test.reflect.Class_getMethod02.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == main
            runString = "test(3)";
            if (!"main".equals(test.reflect.Class_getMethod02.test(3))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == !java.lang.NoSuchMethodException
            try {
                runString = "test(4)";
                test.reflect.Class_getMethod02.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(5) == !java.lang.NoSuchMethodException
            try {
                runString = "test(5)";
                test.reflect.Class_getMethod02.test(5);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NoSuchMethodException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(6) == null
            runString = "test(6)";
            if (null != test.reflect.Class_getMethod02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_newInstance01() {
        JavaTesterRunScheme.begin("test.reflect.Class_newInstance01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Class_newInstance01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.reflect.Class_newInstance01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_newInstance02() {
        JavaTesterRunScheme.begin("test.reflect.Class_newInstance02");
        String runString = null;
        try {
        // test(0) == !java.lang.IllegalAccessException
            try {
                runString = "test(0)";
                test.reflect.Class_newInstance02.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalAccessException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.reflect.Class_newInstance02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_newInstance03() {
        JavaTesterRunScheme.begin("test.reflect.Class_newInstance03");
        String runString = null;
        try {
        // test(0) == !java.lang.InstantiationException
            try {
                runString = "test(0)";
                test.reflect.Class_newInstance03.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.InstantiationException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == !java.lang.InstantiationException
            try {
                runString = "test(1)";
                test.reflect.Class_newInstance03.test(1);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.InstantiationException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(2) == !java.lang.InstantiationException
            try {
                runString = "test(2)";
                test.reflect.Class_newInstance03.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.InstantiationException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == !java.lang.InstantiationException
            try {
                runString = "test(3)";
                test.reflect.Class_newInstance03.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.InstantiationException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.reflect.Class_newInstance03.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_newInstance06() {
        JavaTesterRunScheme.begin("test.reflect.Class_newInstance06");
        String runString = null;
        try {
        // test(0) == !java.lang.InstantiationException
            try {
                runString = "test(0)";
                test.reflect.Class_newInstance06.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.InstantiationException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.reflect.Class_newInstance06.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Class_newInstance07() {
        JavaTesterRunScheme.begin("test.reflect.Class_newInstance07");
        String runString = null;
        try {
        // test(0) == !java.lang.Exception
            try {
                runString = "test(0)";
                test.reflect.Class_newInstance07.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.Exception.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.reflect.Class_newInstance07.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_get01() {
        JavaTesterRunScheme.begin("test.reflect.Field_get01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_get01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_get01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_get01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_get01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_get01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_get01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_get01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_get01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_get01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_get02() {
        JavaTesterRunScheme.begin("test.reflect.Field_get02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_get02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_get02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_get02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_get02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_get02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_get02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_get02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_get02.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_get02.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_get03() {
        JavaTesterRunScheme.begin("test.reflect.Field_get03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_get03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_get03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_get03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_get03.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_get03.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_get03.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_get03.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_get03.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_get03.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_get04() {
        JavaTesterRunScheme.begin("test.reflect.Field_get04");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_get04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_get04.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_get04.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_get04.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_get04.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_get04.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_get04.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_get04.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_get04.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_getType01() {
        JavaTesterRunScheme.begin("test.reflect.Field_getType01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_getType01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_getType01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_getType01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_getType01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_getType01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_getType01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_getType01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_getType01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_getType01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_set01() {
        JavaTesterRunScheme.begin("test.reflect.Field_set01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_set01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_set01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_set01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_set01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_set01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_set01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_set01.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_set01.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_set01.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_set02() {
        JavaTesterRunScheme.begin("test.reflect.Field_set02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_set02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_set02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_set02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_set02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_set02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_set02.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_set02.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_set02.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_set02.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Field_set03() {
        JavaTesterRunScheme.begin("test.reflect.Field_set03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.reflect.Field_set03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.reflect.Field_set03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.reflect.Field_set03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.reflect.Field_set03.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.reflect.Field_set03.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.reflect.Field_set03.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == true
            runString = "test(6)";
            if (true != test.reflect.Field_set03.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == true
            runString = "test(7)";
            if (true != test.reflect.Field_set03.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8) == false
            runString = "test(8)";
            if (false != test.reflect.Field_set03.test(8)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Invoke_main01() {
        JavaTesterRunScheme.begin("test.reflect.Invoke_main01");
        String runString = null;
        try {
        // test("test1") == test1
            runString = "test(\"test1\")";
            if (!"test1".equals(test.reflect.Invoke_main01.test("test1"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("test2") == test2
            runString = "test(\"test2\")";
            if (!"test2".equals(test.reflect.Invoke_main01.test("test2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Invoke_main02() {
        JavaTesterRunScheme.begin("test.reflect.Invoke_main02");
        String runString = null;
        try {
        // test("test1") == test1
            runString = "test(\"test1\")";
            if (!"test1".equals(test.reflect.Invoke_main02.test("test1"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("test2") == test2
            runString = "test(\"test2\")";
            if (!"test2".equals(test.reflect.Invoke_main02.test("test2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Invoke_main03() {
        JavaTesterRunScheme.begin("test.reflect.Invoke_main03");
        String runString = null;
        try {
        // test("test1") == test1
            runString = "test(\"test1\")";
            if (!"test1".equals(test.reflect.Invoke_main03.test("test1"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("test2") == test2
            runString = "test(\"test2\")";
            if (!"test2".equals(test.reflect.Invoke_main03.test("test2"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Invoke_virtual01() {
        JavaTesterRunScheme.begin("test.reflect.Invoke_virtual01");
        String runString = null;
        try {
        // test(1) == 55
            runString = "test(1)";
            if (55 != test.reflect.Invoke_virtual01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Method_getParameterTypes01() {
        JavaTesterRunScheme.begin("test.reflect.Method_getParameterTypes01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.reflect.Method_getParameterTypes01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.reflect.Method_getParameterTypes01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.reflect.Method_getParameterTypes01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == -1
            runString = "test(3)";
            if (-1 != test.reflect.Method_getParameterTypes01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Method_getReturnType01() {
        JavaTesterRunScheme.begin("test.reflect.Method_getReturnType01");
        String runString = null;
        try {
        // test(0) == int
            runString = "test(0)";
            if (!"int".equals(test.reflect.Method_getReturnType01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == java.lang.String
            runString = "test(1)";
            if (!"java.lang.String".equals(test.reflect.Method_getReturnType01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == void
            runString = "test(2)";
            if (!"void".equals(test.reflect.Method_getReturnType01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == null
            runString = "test(3)";
            if (null != test.reflect.Method_getReturnType01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_reflect_Reflection_getCallerClass01() {
        JavaTesterRunScheme.begin("test.reflect.Reflection_getCallerClass01");
        String runString = null;
        try {
        // test(0) == sun.reflect.Reflection
            runString = "test(0)";
            if (!"sun.reflect.Reflection".equals(test.reflect.Reflection_getCallerClass01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == test.reflect.Reflection_getCallerClass01$Caller1
            runString = "test(1)";
            if (!"test.reflect.Reflection_getCallerClass01$Caller1".equals(test.reflect.Reflection_getCallerClass01.test(1))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == test.reflect.Reflection_getCallerClass01$Caller2
            runString = "test(2)";
            if (!"test.reflect.Reflection_getCallerClass01$Caller2".equals(test.reflect.Reflection_getCallerClass01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_Class_getName() {
        JavaTesterRunScheme.begin("test.jdk.Class_getName");
        String runString = null;
        try {
        // test(0) == java.lang.String
            runString = "test(0)";
            if (!"java.lang.String".equals(test.jdk.Class_getName.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_EnumMap01() {
        JavaTesterRunScheme.begin("test.jdk.EnumMap01");
        String runString = null;
        try {
        // test(0) == A
            runString = "test(0)";
            if (!"A".equals(test.jdk.EnumMap01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_EnumMap02() {
        JavaTesterRunScheme.begin("test.jdk.EnumMap02");
        String runString = null;
        try {
        // test(0) == A
            runString = "test(0)";
            if (!"A".equals(test.jdk.EnumMap02.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_System_currentTimeMillis01() {
        JavaTesterRunScheme.begin("test.jdk.System_currentTimeMillis01");
        String runString = null;
        try {
        // test(0) == 1
            runString = "test(0)";
            if (1 != test.jdk.System_currentTimeMillis01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_System_currentTimeMillis02() {
        JavaTesterRunScheme.begin("test.jdk.System_currentTimeMillis02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jdk.System_currentTimeMillis02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_System_nanoTime01() {
        JavaTesterRunScheme.begin("test.jdk.System_nanoTime01");
        String runString = null;
        try {
        // test(0) == 1
            runString = "test(0)";
            if (1 != test.jdk.System_nanoTime01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jdk_System_nanoTime02() {
        JavaTesterRunScheme.begin("test.jdk.System_nanoTime02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jdk.System_nanoTime02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Monitor_contended01() {
        JavaTesterRunScheme.begin("test.threads.Monitor_contended01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Monitor_contended01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Monitor_notowner01() {
        JavaTesterRunScheme.begin("test.threads.Monitor_notowner01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Monitor_notowner01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Monitorenter01() {
        JavaTesterRunScheme.begin("test.threads.Monitorenter01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Monitorenter01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Monitorenter02() {
        JavaTesterRunScheme.begin("test.threads.Monitorenter02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Monitorenter02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Object_wait01() {
        JavaTesterRunScheme.begin("test.threads.Object_wait01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Object_wait01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Object_wait01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.threads.Object_wait01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(15) == true
            runString = "test(15)";
            if (true != test.threads.Object_wait01.test(15)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Object_wait02() {
        JavaTesterRunScheme.begin("test.threads.Object_wait02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Object_wait02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Object_wait02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.threads.Object_wait02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Object_wait03() {
        JavaTesterRunScheme.begin("test.threads.Object_wait03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Object_wait03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Object_wait03.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.threads.Object_wait03.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Object_wait04() {
        JavaTesterRunScheme.begin("test.threads.Object_wait04");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Object_wait04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Object_wait04.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.threads.Object_wait04.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.threads.Object_wait04.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == true
            runString = "test(4)";
            if (true != test.threads.Object_wait04.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.threads.Object_wait04.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_currentThread01() {
        JavaTesterRunScheme.begin("test.threads.Thread_currentThread01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_currentThread01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_getState01() {
        JavaTesterRunScheme.begin("test.threads.Thread_getState01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_getState01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_getState02() {
        JavaTesterRunScheme.begin("test.threads.Thread_getState02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_getState02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_holdsLock01() {
        JavaTesterRunScheme.begin("test.threads.Thread_holdsLock01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_holdsLock01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.threads.Thread_holdsLock01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == !java.lang.NullPointerException
            try {
                runString = "test(2)";
                test.threads.Thread_holdsLock01.test(2);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.NullPointerException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(3) == false
            runString = "test(3)";
            if (false != test.threads.Thread_holdsLock01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_isAlive01() {
        JavaTesterRunScheme.begin("test.threads.Thread_isAlive01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_isAlive01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_isInterrupted01() {
        JavaTesterRunScheme.begin("test.threads.Thread_isInterrupted01");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.threads.Thread_isInterrupted01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_isInterrupted02() {
        JavaTesterRunScheme.begin("test.threads.Thread_isInterrupted02");
        String runString = null;
        try {
        // test(0,0) == true
            runString = "test(0,0)";
            if (true != test.threads.Thread_isInterrupted02.test(0, 0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,500) == true
            runString = "test(1,500)";
            if (true != test.threads.Thread_isInterrupted02.test(1, 500)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_isInterrupted03() {
        JavaTesterRunScheme.begin("test.threads.Thread_isInterrupted03");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_isInterrupted03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_isInterrupted04() {
        JavaTesterRunScheme.begin("test.threads.Thread_isInterrupted04");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_isInterrupted04.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_join01() {
        JavaTesterRunScheme.begin("test.threads.Thread_join01");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.threads.Thread_join01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_join02() {
        JavaTesterRunScheme.begin("test.threads.Thread_join02");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.threads.Thread_join02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_join03() {
        JavaTesterRunScheme.begin("test.threads.Thread_join03");
        String runString = null;
        try {
        // test(0) == false
            runString = "test(0)";
            if (false != test.threads.Thread_join03.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_new01() {
        JavaTesterRunScheme.begin("test.threads.Thread_new01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_new01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Thread_new01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.threads.Thread_new01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.threads.Thread_new01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.threads.Thread_new01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_new02() {
        JavaTesterRunScheme.begin("test.threads.Thread_new02");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_new02.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Thread_new02.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.threads.Thread_new02.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == true
            runString = "test(3)";
            if (true != test.threads.Thread_new02.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == false
            runString = "test(4)";
            if (false != test.threads.Thread_new02.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_setPriority01() {
        JavaTesterRunScheme.begin("test.threads.Thread_setPriority01");
        String runString = null;
        try {
        // test(0) == !java.lang.IllegalArgumentException
            try {
                runString = "test(0)";
                test.threads.Thread_setPriority01.test(0);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalArgumentException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(1) == true
            runString = "test(1)";
            if (true != test.threads.Thread_setPriority01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == true
            runString = "test(5)";
            if (true != test.threads.Thread_setPriority01.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(10) == true
            runString = "test(10)";
            if (true != test.threads.Thread_setPriority01.test(10)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(11) == !java.lang.IllegalArgumentException
            try {
                runString = "test(11)";
                test.threads.Thread_setPriority01.test(11);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.IllegalArgumentException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_sleep01() {
        JavaTesterRunScheme.begin("test.threads.Thread_sleep01");
        String runString = null;
        try {
        // test(10) == true
            runString = "test(10)";
            if (true != test.threads.Thread_sleep01.test(10)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(20) == true
            runString = "test(20)";
            if (true != test.threads.Thread_sleep01.test(20)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(100) == true
            runString = "test(100)";
            if (true != test.threads.Thread_sleep01.test(100)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_start01() {
        JavaTesterRunScheme.begin("test.threads.Thread_start01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_start01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_threads_Thread_yield01() {
        JavaTesterRunScheme.begin("test.threads.Thread_yield01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.threads.Thread_yield01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BC_invokevirtual2() {
        JavaTesterRunScheme.begin("test.micro.BC_invokevirtual2");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.micro.BC_invokevirtual2.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.micro.BC_invokevirtual2.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.micro.BC_invokevirtual2.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 3
            runString = "test(3)";
            if (3 != test.micro.BC_invokevirtual2.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == -4
            runString = "test(-4)";
            if (-4 != test.micro.BC_invokevirtual2.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigDoubleParams02() {
        JavaTesterRunScheme.begin("test.micro.BigDoubleParams02");
        String runString = null;
        try {
        // test(0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 1.0
            runString = "test(0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (1.0 != test.micro.BigDoubleParams02.test(0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 2.0
            runString = "test(1,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (2.0 != test.micro.BigDoubleParams02.test(1, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 3.0
            runString = "test(2,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (3.0 != test.micro.BigDoubleParams02.test(2, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 4.0
            runString = "test(3,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (4.0 != test.micro.BigDoubleParams02.test(3, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 5.0
            runString = "test(4,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (5.0 != test.micro.BigDoubleParams02.test(4, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 6.0
            runString = "test(5,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (6.0 != test.micro.BigDoubleParams02.test(5, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 7.0
            runString = "test(6,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (7.0 != test.micro.BigDoubleParams02.test(6, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 8.0
            runString = "test(7,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (8.0 != test.micro.BigDoubleParams02.test(7, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 9.0
            runString = "test(8,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (9.0 != test.micro.BigDoubleParams02.test(8, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigFloatParams01() {
        JavaTesterRunScheme.begin("test.micro.BigFloatParams01");
        String runString = null;
        try {
        // test(0) == 45.0
            runString = "test(0)";
            if (45.0 != test.micro.BigFloatParams01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 45.0
            runString = "test(1)";
            if (45.0 != test.micro.BigFloatParams01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 45.0
            runString = "test(2)";
            if (45.0 != test.micro.BigFloatParams01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 45.0
            runString = "test(3)";
            if (45.0 != test.micro.BigFloatParams01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 0.0
            runString = "test(4)";
            if (0.0 != test.micro.BigFloatParams01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigFloatParams02() {
        JavaTesterRunScheme.begin("test.micro.BigFloatParams02");
        String runString = null;
        try {
        // test(0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 1.0
            runString = "test(0,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (1.0f != test.micro.BigFloatParams02.test(0, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 2.0
            runString = "test(1,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (2.0f != test.micro.BigFloatParams02.test(1, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 3.0
            runString = "test(2,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (3.0f != test.micro.BigFloatParams02.test(2, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 4.0
            runString = "test(3,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (4.0f != test.micro.BigFloatParams02.test(3, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 5.0
            runString = "test(4,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (5.0f != test.micro.BigFloatParams02.test(4, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 6.0
            runString = "test(5,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (6.0f != test.micro.BigFloatParams02.test(5, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 7.0
            runString = "test(6,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (7.0f != test.micro.BigFloatParams02.test(6, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 8.0
            runString = "test(7,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (8.0f != test.micro.BigFloatParams02.test(7, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0) == 9.0
            runString = "test(8,1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0)";
            if (9.0f != test.micro.BigFloatParams02.test(8, 1.0f, 2.0f, 3.0f, 4.0f, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigIntParams01() {
        JavaTesterRunScheme.begin("test.micro.BigIntParams01");
        String runString = null;
        try {
        // test(0) == 45
            runString = "test(0)";
            if (45 != test.micro.BigIntParams01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 45
            runString = "test(1)";
            if (45 != test.micro.BigIntParams01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 45
            runString = "test(2)";
            if (45 != test.micro.BigIntParams01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 45
            runString = "test(3)";
            if (45 != test.micro.BigIntParams01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 0
            runString = "test(4)";
            if (0 != test.micro.BigIntParams01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigIntParams02() {
        JavaTesterRunScheme.begin("test.micro.BigIntParams02");
        String runString = null;
        try {
        // test(0,1,2,3,4,5,6,7,-8,-9) == 1
            runString = "test(0,1,2,3,4,5,6,7,-8,-9)";
            if (1 != test.micro.BigIntParams02.test(0, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,2,3,4,5,6,7,-8,-9) == 2
            runString = "test(1,1,2,3,4,5,6,7,-8,-9)";
            if (2 != test.micro.BigIntParams02.test(1, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,1,2,3,4,5,6,7,-8,-9) == 3
            runString = "test(2,1,2,3,4,5,6,7,-8,-9)";
            if (3 != test.micro.BigIntParams02.test(2, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,1,2,3,4,5,6,7,-8,-9) == 4
            runString = "test(3,1,2,3,4,5,6,7,-8,-9)";
            if (4 != test.micro.BigIntParams02.test(3, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,1,2,3,4,5,6,7,-8,-9) == 5
            runString = "test(4,1,2,3,4,5,6,7,-8,-9)";
            if (5 != test.micro.BigIntParams02.test(4, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,1,2,3,4,5,6,7,-8,-9) == 6
            runString = "test(5,1,2,3,4,5,6,7,-8,-9)";
            if (6 != test.micro.BigIntParams02.test(5, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,1,2,3,4,5,6,7,-8,-9) == 7
            runString = "test(6,1,2,3,4,5,6,7,-8,-9)";
            if (7 != test.micro.BigIntParams02.test(6, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,1,2,3,4,5,6,7,-8,-9) == -8
            runString = "test(7,1,2,3,4,5,6,7,-8,-9)";
            if (-8 != test.micro.BigIntParams02.test(7, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,1,2,3,4,5,6,7,-8,-9) == -9
            runString = "test(8,1,2,3,4,5,6,7,-8,-9)";
            if (-9 != test.micro.BigIntParams02.test(8, 1, 2, 3, 4, 5, 6, 7, -8, -9)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigLongParams02() {
        JavaTesterRunScheme.begin("test.micro.BigLongParams02");
        String runString = null;
        try {
        // test(0,1,2,3,4,5,6,7,-8,-9) == 1
            runString = "test(0,1,2,3,4,5,6,7,-8,-9)";
            if (1L != test.micro.BigLongParams02.test(0, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,1,2,3,4,5,6,7,-8,-9) == 2
            runString = "test(1,1,2,3,4,5,6,7,-8,-9)";
            if (2L != test.micro.BigLongParams02.test(1, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,1,2,3,4,5,6,7,-8,-9) == 3
            runString = "test(2,1,2,3,4,5,6,7,-8,-9)";
            if (3L != test.micro.BigLongParams02.test(2, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,1,2,3,4,5,6,7,-8,-9) == 4
            runString = "test(3,1,2,3,4,5,6,7,-8,-9)";
            if (4L != test.micro.BigLongParams02.test(3, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,1,2,3,4,5,6,7,-8,-9) == 5
            runString = "test(4,1,2,3,4,5,6,7,-8,-9)";
            if (5L != test.micro.BigLongParams02.test(4, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,1,2,3,4,5,6,7,-8,-9) == 6
            runString = "test(5,1,2,3,4,5,6,7,-8,-9)";
            if (6L != test.micro.BigLongParams02.test(5, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,1,2,3,4,5,6,7,-8,-9) == 7
            runString = "test(6,1,2,3,4,5,6,7,-8,-9)";
            if (7L != test.micro.BigLongParams02.test(6, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,1,2,3,4,5,6,7,-8,-9) == -8
            runString = "test(7,1,2,3,4,5,6,7,-8,-9)";
            if (-8L != test.micro.BigLongParams02.test(7, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,1,2,3,4,5,6,7,-8,-9) == -9
            runString = "test(8,1,2,3,4,5,6,7,-8,-9)";
            if (-9L != test.micro.BigLongParams02.test(8, 1L, 2L, 3L, 4L, 5L, 6L, 7L, -8L, -9L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigMixedParams01() {
        JavaTesterRunScheme.begin("test.micro.BigMixedParams01");
        String runString = null;
        try {
        // test(0) == 45.0
            runString = "test(0)";
            if (45.0 != test.micro.BigMixedParams01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 45.0
            runString = "test(1)";
            if (45.0 != test.micro.BigMixedParams01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 45.0
            runString = "test(2)";
            if (45.0 != test.micro.BigMixedParams01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 45.0
            runString = "test(3)";
            if (45.0 != test.micro.BigMixedParams01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 0.0
            runString = "test(4)";
            if (0.0 != test.micro.BigMixedParams01.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigMixedParams02() {
        JavaTesterRunScheme.begin("test.micro.BigMixedParams02");
        String runString = null;
        try {
        // test(0,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 1.0
            runString = "test(0,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (1.0f != test.micro.BigMixedParams02.test(0, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 2.0
            runString = "test(1,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (2.0f != test.micro.BigMixedParams02.test(1, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 3.0
            runString = "test(2,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (3.0f != test.micro.BigMixedParams02.test(2, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 4.0
            runString = "test(3,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (4.0f != test.micro.BigMixedParams02.test(3, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 5.0
            runString = "test(4,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (5.0f != test.micro.BigMixedParams02.test(4, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 6.0
            runString = "test(5,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (6.0f != test.micro.BigMixedParams02.test(5, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 7.0
            runString = "test(6,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (7.0f != test.micro.BigMixedParams02.test(6, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 8.0
            runString = "test(7,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (8.0f != test.micro.BigMixedParams02.test(7, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 9.0
            runString = "test(8,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (9.0f != test.micro.BigMixedParams02.test(8, -1, -1, -1, -1, 1.0f, 2.0f, 3.0f, 4.0f, -1, -1, 5.0f, 6.0f, 7.0f, 8.0f, 9.0f)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigMixedParams03() {
        JavaTesterRunScheme.begin("test.micro.BigMixedParams03");
        String runString = null;
        try {
        // test(0,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 1.0
            runString = "test(0,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (1.0 != test.micro.BigMixedParams03.test(0, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 2.0
            runString = "test(1,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (2.0 != test.micro.BigMixedParams03.test(1, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 3.0
            runString = "test(2,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (3.0 != test.micro.BigMixedParams03.test(2, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 4.0
            runString = "test(3,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (4.0 != test.micro.BigMixedParams03.test(3, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 5.0
            runString = "test(4,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (5.0 != test.micro.BigMixedParams03.test(4, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 6.0
            runString = "test(5,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (6.0 != test.micro.BigMixedParams03.test(5, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 7.0
            runString = "test(6,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (7.0 != test.micro.BigMixedParams03.test(6, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 8.0
            runString = "test(7,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (8.0 != test.micro.BigMixedParams03.test(7, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(8,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0) == 9.0
            runString = "test(8,-1,-1,-1,-1,1.0,2.0,3.0,4.0,-1,-1,5.0,6.0,7.0,8.0,9.0)";
            if (9.0 != test.micro.BigMixedParams03.test(8, -1, -1, -1, -1, 1.0, 2.0, 3.0, 4.0, -1, -1, 5.0, 6.0, 7.0, 8.0, 9.0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigObjectParams01() {
        JavaTesterRunScheme.begin("test.micro.BigObjectParams01");
        String runString = null;
        try {
        // test("0","1","2","3","4","5","6","7","8","9") == 0
            runString = "test(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\")";
            if (!"0".equals(test.micro.BigObjectParams01.test("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test("a",null,null,null,null,null,null,null,null,null) == a
            runString = "test(\"a\",null,null,null,null,null,null,null,null,null)";
            if (!"a".equals(test.micro.BigObjectParams01.test("a", null, null, null, null, null, null, null, null, null))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigObjectParams02() {
        JavaTesterRunScheme.begin("test.micro.BigObjectParams02");
        String runString = null;
        try {
        // test("0","1","2","3","4","5","6","7","8","9") == 0123456789
            runString = "test(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\")";
            if (!"0123456789".equals(test.micro.BigObjectParams02.test("0", "1", "2", "3", "4", "5", "6", "7", "8", "9"))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_BigParamsAlignment() {
        JavaTesterRunScheme.begin("test.micro.BigParamsAlignment");
        String runString = null;
        try {
        // test(0) == 45
            runString = "test(0)";
            if (45 != test.micro.BigParamsAlignment.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 55
            runString = "test(1)";
            if (55 != test.micro.BigParamsAlignment.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 45
            runString = "test(2)";
            if (45 != test.micro.BigParamsAlignment.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 55
            runString = "test(3)";
            if (55 != test.micro.BigParamsAlignment.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 66
            runString = "test(4)";
            if (66 != test.micro.BigParamsAlignment.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 78
            runString = "test(5)";
            if (78 != test.micro.BigParamsAlignment.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 0
            runString = "test(6)";
            if (0 != test.micro.BigParamsAlignment.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_Bubblesort() {
        JavaTesterRunScheme.begin("test.micro.Bubblesort");
        String runString = null;
        try {
        // test(0) == -9
            runString = "test(0)";
            if (-9 != test.micro.Bubblesort.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 0
            runString = "test(1)";
            if (0 != test.micro.Bubblesort.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 0
            runString = "test(2)";
            if (0 != test.micro.Bubblesort.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 1
            runString = "test(3)";
            if (1 != test.micro.Bubblesort.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 5
            runString = "test(4)";
            if (5 != test.micro.Bubblesort.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 8
            runString = "test(5)";
            if (8 != test.micro.Bubblesort.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 23
            runString = "test(6)";
            if (23 != test.micro.Bubblesort.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == 882
            runString = "test(7)";
            if (882 != test.micro.Bubblesort.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_Fibonacci() {
        JavaTesterRunScheme.begin("test.micro.Fibonacci");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.micro.Fibonacci.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.micro.Fibonacci.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 1
            runString = "test(2)";
            if (1 != test.micro.Fibonacci.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 2
            runString = "test(3)";
            if (2 != test.micro.Fibonacci.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(4) == 3
            runString = "test(4)";
            if (3 != test.micro.Fibonacci.test(4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(5) == 5
            runString = "test(5)";
            if (5 != test.micro.Fibonacci.test(5)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(6) == 8
            runString = "test(6)";
            if (8 != test.micro.Fibonacci.test(6)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(7) == 13
            runString = "test(7)";
            if (13 != test.micro.Fibonacci.test(7)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_InvokeVirtual_01() {
        JavaTesterRunScheme.begin("test.micro.InvokeVirtual_01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.micro.InvokeVirtual_01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11 != test.micro.InvokeVirtual_01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 22
            runString = "test(2)";
            if (22 != test.micro.InvokeVirtual_01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 42
            runString = "test(3)";
            if (42 != test.micro.InvokeVirtual_01.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_InvokeVirtual_02() {
        JavaTesterRunScheme.begin("test.micro.InvokeVirtual_02");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.micro.InvokeVirtual_02.test(0L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11L != test.micro.InvokeVirtual_02.test(1L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 22
            runString = "test(2)";
            if (22L != test.micro.InvokeVirtual_02.test(2L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 42
            runString = "test(3)";
            if (42L != test.micro.InvokeVirtual_02.test(3L)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_StrangeFrames() {
        JavaTesterRunScheme.begin("test.micro.StrangeFrames");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.micro.StrangeFrames.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_String01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_String01");
        String runString = null;
        try {
        // test(0) == a
            runString = "test(0)";
            if (!"a".equals(test.micro.VarArgs_String01.test(0))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == null
            runString = "test(1)";
            if (null != test.micro.VarArgs_String01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == test
            runString = "test(2)";
            if (!"test".equals(test.micro.VarArgs_String01.test(2))) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_String01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_String01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_boolean01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_boolean01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.micro.VarArgs_boolean01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.micro.VarArgs_boolean01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == true
            runString = "test(2)";
            if (true != test.micro.VarArgs_boolean01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_boolean01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_boolean01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_byte01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_byte01");
        String runString = null;
        try {
        // test(0) == 1
            runString = "test(0)";
            if ((byte) 1 != test.micro.VarArgs_byte01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 2
            runString = "test(1)";
            if ((byte) 2 != test.micro.VarArgs_byte01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 3
            runString = "test(2)";
            if ((byte) 3 != test.micro.VarArgs_byte01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_byte01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_byte01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_char01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_char01");
        String runString = null;
        try {
        // test(0) == 'a'
            runString = "test(0)";
            if ((char) 97 != test.micro.VarArgs_char01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 'b'
            runString = "test(1)";
            if ((char) 98 != test.micro.VarArgs_char01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 'c'
            runString = "test(2)";
            if ((char) 99 != test.micro.VarArgs_char01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_char01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_char01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_double01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_double01");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0 != test.micro.VarArgs_double01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0 != test.micro.VarArgs_double01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2.0
            runString = "test(2)";
            if (2.0 != test.micro.VarArgs_double01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_double01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_double01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_float01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_float01");
        String runString = null;
        try {
        // test(0) == 0.0
            runString = "test(0)";
            if (0.0f != test.micro.VarArgs_float01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1.0
            runString = "test(1)";
            if (1.0f != test.micro.VarArgs_float01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2.0
            runString = "test(2)";
            if (2.0f != test.micro.VarArgs_float01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_float01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_float01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_int01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_int01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0 != test.micro.VarArgs_int01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1 != test.micro.VarArgs_int01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2 != test.micro.VarArgs_int01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_int01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_int01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_long01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_long01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if (0L != test.micro.VarArgs_long01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if (1L != test.micro.VarArgs_long01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if (2L != test.micro.VarArgs_long01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_long01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_long01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_micro_VarArgs_short01() {
        JavaTesterRunScheme.begin("test.micro.VarArgs_short01");
        String runString = null;
        try {
        // test(0) == 0
            runString = "test(0)";
            if ((short) 0 != test.micro.VarArgs_short01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 1
            runString = "test(1)";
            if ((short) 1 != test.micro.VarArgs_short01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 2
            runString = "test(2)";
            if ((short) 2 != test.micro.VarArgs_short01.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(3)";
                test.micro.VarArgs_short01.test(3);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        // test(4) == !java.lang.ArrayIndexOutOfBoundsException
            try {
                runString = "test(4)";
                test.micro.VarArgs_short01.test(4);
                JavaTesterRunScheme.end(runString, false);
                return;
            } catch (Throwable e) {
                if (e.getClass() != java.lang.ArrayIndexOutOfBoundsException.class) {
                    JavaTesterRunScheme.end(runString, e);
                    return;
                }
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_ArrayCopy01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_ArrayCopy01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_ArrayCopy01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_GetClassContext01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_GetClassContext01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_GetClassContext01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_GetFreeMemory01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_GetFreeMemory01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_GetFreeMemory01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_GetMaxMemory01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_GetMaxMemory01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_GetMaxMemory01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_GetTotalMemory01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_GetTotalMemory01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_GetTotalMemory01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
    static void test_jvmni_JVM_IsNaN01() {
        JavaTesterRunScheme.begin("test.jvmni.JVM_IsNaN01");
        String runString = null;
        try {
        // test(0) == true
            runString = "test(0)";
            if (true != test.jvmni.JVM_IsNaN01.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == false
            runString = "test(1)";
            if (false != test.jvmni.JVM_IsNaN01.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
// END GENERATED TEST RUNS

}
