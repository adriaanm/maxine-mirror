/*
 * Copyright (c) 2007 Sun Microsystems, Inc.  All rights reserved.
 *
 * Sun Microsystems, Inc. has intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation, these intellectual property
 * rights may include one or more of the U.S. patents listed at http://www.sun.com/patents and one or
 * more additional patents or pending patent applications in the U.S. and in other countries.
 *
 * U.S. Government Rights - Commercial software. Government users are subject to the Sun
 * Microsystems, Inc. standard license agreement and applicable provisions of the FAR and its
 * supplements.
 *
 * Use is subject to license terms. Sun, Sun Microsystems, the Sun logo, Java and Solaris are trademarks or
 * registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries. All SPARC trademarks
 * are used under license and are trademarks or registered trademarks of SPARC International, Inc. in the
 * U.S. and other countries.
 *
 * UNIX is a registered trademark in the U.S. and other countries, exclusively licensed through X/Open
 * Company, Ltd.
 */
/*
 * Copyright (c) 2007 Sun Microsystems, Inc. All rights reserved. Use is subject to license terms.
 */
package test.com.sun.max.vm.testrun.some;

import com.sun.max.annotate.*;


/**
 * This class contains a collection of test methods that are generated by
 * the Java Tester. These test methods invoke the test classes' test methods
 * with the inputs specified in each test class's comment. These test methods
 * check for the correct output (or exception) for a given input.
 *
 * This class is separated from the JavaTesterRunScheme so that it can be compiled
 * with a different compiler than the JavaTesterRunScheme--typically, the JIT. Additionally,
 * the test classes themselves can be compiled with a different compiler, which allows
 * testing calls between code compiled by two different compilers.
 *
 * The code of each of these methods is generated by
 * {@link test.com.sun.max.vm.testrun.JavaTesterGenerator}.
 *
 * @author Ben L. Titzer
 */
@NO_INLINING
public class JavaTesterTests {
// GENERATED TEST RUNS
    static void test_bytecode_BC_getstatic_i() {
        JavaTesterRunScheme.begin("test.bytecode.BC_getstatic_i");
        String runString = null;
        try {
        // test(0) == 11
            runString = "test(0)";
            if (11 != test.bytecode.BC_getstatic_i.test(0)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(1) == 11
            runString = "test(1)";
            if (11 != test.bytecode.BC_getstatic_i.test(1)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(2) == 11
            runString = "test(2)";
            if (11 != test.bytecode.BC_getstatic_i.test(2)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(3) == 11
            runString = "test(3)";
            if (11 != test.bytecode.BC_getstatic_i.test(3)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        // test(-4) == 11
            runString = "test(-4)";
            if (11 != test.bytecode.BC_getstatic_i.test(-4)) {
                JavaTesterRunScheme.end(runString, false);
                return;
            }
        } catch (Throwable t) {
            JavaTesterRunScheme.end(runString, t);
            return;
        }
        JavaTesterRunScheme.end(null, true);
    }
// END GENERATED TEST RUNS

}
