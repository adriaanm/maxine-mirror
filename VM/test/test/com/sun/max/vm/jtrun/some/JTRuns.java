/*
 * Copyright (c) 2007 Sun Microsystems, Inc.  All rights reserved.
 *
 * Sun Microsystems, Inc. has intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation, these intellectual property
 * rights may include one or more of the U.S. patents listed at http://www.sun.com/patents and one or
 * more additional patents or pending patent applications in the U.S. and in other countries.
 *
 * U.S. Government Rights - Commercial software. Government users are subject to the Sun
 * Microsystems, Inc. standard license agreement and applicable provisions of the FAR and its
 * supplements.
 *
 * Use is subject to license terms. Sun, Sun Microsystems, the Sun logo, Java and Solaris are trademarks or
 * registered trademarks of Sun Microsystems, Inc. in the U.S. and other countries. All SPARC trademarks
 * are used under license and are trademarks or registered trademarks of SPARC International, Inc. in the
 * U.S. and other countries.
 *
 * UNIX is a registered trademark in the U.S. and other countries, exclusively licensed through X/Open
 * Company, Ltd.
 */
package test.com.sun.max.vm.jtrun.some;

import test.com.sun.max.vm.jtrun.*;

import com.sun.max.vm.run.java.jtrun.*;

import com.sun.max.annotate.*;

/**
 * This class contains a collection of test methods that are generated by
 * the Java Tester. These test methods invoke the test classes' test methods
 * with the inputs specified in each test class's comment. These test methods
 * check for the correct output (or exception) for a given input.
 *
 * This class is separated from the JTRunScheme so that it can be compiled
 * with a different compiler than the JTRunScheme--typically, the JIT. Additionally,
 * the test classes themselves can be compiled with a different compiler, which allows
 * testing calls between code compiled by two different compilers.
 *
 * The code of each of these methods is generated by
 * {@link test.com.sun.max.vm.jtrun.JTGenerator}.
 *
 * @author Ben L. Titzer
 */
@NO_INLINING
public class JTRuns {
    public static boolean runTests(int start, int end) {
        JTUtil.reset(start, end);
        while (start < end) {
            //begin(JTConfig.testClasses.getTestName(start));
            if (!runTest(start)) {
                return false;
            }
            start++;
        }
        return true;
    }

    static void begin(String testName) {
        JTUtil.begin(testName);
    }

    static void pass() {
        JTUtil.pass();
    }

    static void fail(String runString) {
        JTUtil.fail(runString);
    }

    static void fail(String runString, Throwable thrown) {
        JTUtil.fail(runString, thrown);
    }

    static void fail(int runNumber) {
        JTUtil.fail(" run #" + runNumber);
    }

    static void fail(int runNumber, Throwable thrown) {
        JTUtil.fail(" run #" + runNumber, thrown);
    }

// Checkstyle: stop
// GENERATED TEST RUNS
    public static boolean runTest(int num) {
        switch(num) {
        }
        return true;
    }
// END GENERATED TEST RUNS
     // Checkstyle: resume

}
