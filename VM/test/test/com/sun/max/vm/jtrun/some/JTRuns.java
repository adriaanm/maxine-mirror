/*
 * Copyright (c) 2009, 2010, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package test.com.sun.max.vm.jtrun.some;

import test.com.sun.max.vm.jtrun.*;

import com.sun.max.annotate.*;

/**
 * This class contains a collection of test methods that are generated by
 * the Java Tester. These test methods invoke the test classes' test methods
 * with the inputs specified in each test class's comment. These test methods
 * check for the correct output (or exception) for a given input.
 *
 * This class is separated from the JTRunScheme so that it can be compiled
 * with a different compiler than the JTRunScheme--typically, the JIT. Additionally,
 * the test classes themselves can be compiled with a different compiler, which allows
 * testing calls between code compiled by two different compilers.
 *
 * The code of each of these methods is generated by
 * {@link test.com.sun.max.vm.jtrun.JTGenerator}.
 *
 * @author Ben L. Titzer
 */
@NO_INLINING
public class JTRuns {
    public static boolean runTests(int start, int end) {
        JTUtil.reset(start, end);
        while (start < end) {
            //begin(JTConfig.testClasses.getTestName(start));
            if (!runTest(start)) {
                return false;
            }
            start++;
        }
        return true;
    }

    static void begin(String testName) {
        JTUtil.begin(testName);
    }

    static void pass() {
        JTUtil.pass();
    }

    static void fail(String runString) {
        JTUtil.fail(runString);
    }

    static void fail(String runString, Throwable thrown) {
        JTUtil.fail(runString, thrown);
    }

    static void fail(int runNumber) {
        JTUtil.fail(" run #" + runNumber);
    }

    static void fail(int runNumber, Throwable thrown) {
        JTUtil.fail(" run #" + runNumber, thrown);
    }

// Checkstyle: stop
// GENERATED TEST RUNS
    public static boolean runTest(int num) {
        switch(num) {
        }
        return true;
    }
// END GENERATED TEST RUNS
     // Checkstyle: resume

}
